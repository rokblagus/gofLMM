{
    "collab_server" : "",
    "contents" : "residuals=\"individual\"\nstd.type=2\nuse.correction.for.imbalance=FALSE\ntype=\"sign.flip\"\nM=100\norder.by.original=FALSE\nverbose=FALSE\n\n\n\n\n\n\nsim.data.cluster<-function(N,n,betas, norm.eps,var.eps=NULL,shape=NULL,scale=NULL,norm.re.intercept,var.re.intercept=NULL,shape.re.intercept=NULL,scale.re.intercept=NULL,sim.re.slope,\n                           norm.re.slope=NULL,var.re.slope=NULL,shape.re.slope=NULL,scale.re.slope=NULL,sim.x2.qdr=FALSE,b.qdr=NULL){\n  \n  \n  \n  yy<-NA\n  \n  id<-NA\n  x1<-NA\n  x2<-NA\n  for (gg in 1:N){\n    \n    id<-c(id,rep(gg,each=n[gg]))\n    x11<-runif(n[gg])\n    x1<-c(x1,x11)\n    \n    x22<-runif(n[gg])\n    x2<-c(x2,x22) \n    if (norm.re.intercept==TRUE) re.int<-rnorm(1,sd=sqrt(var.re.intercept)) else re.int<-rgamma(1,shape=shape.re.intercept,scale=scale.re.intercept)-shape.re.intercept*scale.re.intercept\n    \n    b<-rep(re.int,each=n[gg])\n    \n    \n    \n    if (norm.eps==TRUE) eps<-rnorm(n[gg],sd=sqrt(var.eps)) else eps<-rgamma(n[gg],shape=shape,scale=scale)-shape*scale\n    \n    if (sim.re.slope==TRUE) {\n      if (norm.re.slope==TRUE) re.slope<-rnorm(1,sd=sqrt(var.re.slope)) else re.slope<-rgamma(1,shape=shape.re.slope,scale=scale.re.slope)-shape.re.slope*scale.re.slope\n      \n      b2<-rep(re.slope,each=n[gg])\n      \n      if (sim.x2.qdr==FALSE)   y<-betas[1]+betas[2]*x11+betas[3]*x22+b+b2*x11+eps  else y<-betas[1]+betas[2]*x11+betas[3]*x22+b+b2*x11+eps+ b.qdr*x11**2\n    } else {\n      if (sim.x2.qdr==FALSE) y<-betas[1]+betas[2]*x11+betas[3]*x22+b+eps   else y<-betas[1]+betas[2]*x11+betas[3]*x22+b+eps+ b.qdr*x11**2\n      \n    }\n    yy<-c(yy,y)\n    \n  }\n  yy<-yy[-1]\n  x2<-x2[-1]\n  x1<-x1[-1]\n  id<-id[-1]\n  df<-data.frame(id=id,y=yy,x1=x1,x2=x2)\n  \n  df\n  \n}\n\n#ii=1\nN=100\nn=rep(10,N)\nbetas=c(-1,0.25,0.5)\nx.prob=0.4\nnorm.eps=TRUE\nvar.eps=1\nshape=NULL\nscale=NULL\nnorm.re.intercept=TRUE\nvar.re.intercept=0.5\nshape.re.intercept=NULL\nscale.re.intercept=NULL\nsim.re.slope=TRUE\nnorm.re.slope=TRUE\nvar.re.slope=0.25\nshape.re.slope=NULL\nscale.re.slope=NULL\nsim.x2.qdr=FALSE\nb.qdr=0.25\nfit.re.slope=TRUE\n\n\n\n\n\ndat<-sim.data.cluster(N=N,n=n,betas=betas,norm.eps=norm.eps,var.eps=var.eps,shape=shape,scale=scale,norm.re.intercept=norm.re.intercept,var.re.intercept=var.re.intercept,shape.re.intercept=shape.re.intercept,\n                      scale.re.intercept=scale.re.intercept,sim.re.slope=sim.re.slope,\n                      norm.re.slope=norm.re.slope,var.re.slope=var.re.slope,shape.re.slope=shape.re.slope,scale.re.slope=scale.re.slope,sim.x2.qdr=sim.x2.qdr,b.qdr=b.qdr)\n\n\n\nif (fit.re.slope==TRUE) fit<-lme(y~x1+x2,random=~x1|id,data=dat,method=\"REML\",control=lmeControl( returnObject = TRUE)) else fit<-lme(y~x1+x2,random=~1|id,data=dat,method=\"REML\",control=lmeControl( returnObject = TRUE))\n\n\ngof<-gof.lmm.O.test(fit,\"individual\",2, FALSE,\"sign.flip\",10,FALSE,verbose=TRUE)\n\nsummary.gofLMM.testO(gof)\n\nplot(gof)\n\ngof2<-gof.lmm.O.test.type2(fit,\"individual\",2, FALSE,\"sign.flip\",10,verbose=TRUE)\nsummary.gofLMM.testO(gof2)\n\nplot(gof2)\n\n\n\nx=x\nZZ=ZZ\nid=id\nest.original=estI\nor.original=orI\nA=AA\nB=BB\nfit<-fits\n\n\n\n\n\nsim.data.cluster<-function(N,n,betas, norm.eps,var.eps=NULL,shape=NULL,scale=NULL,norm.re.intercept,var.re.intercept=NULL,shape.re.intercept=NULL,scale.re.intercept=NULL,sim.re.slope,\n                           norm.re.slope=NULL,var.re.slope=NULL,shape.re.slope=NULL,scale.re.slope=NULL,sim.x2.qdr=FALSE,b.qdr=NULL){\n  \n  \n  \n  yy<-NA\n  \n  id<-NA\n  x1<-NA\n  #x2<-NA\n  for (gg in 1:N){\n    \n    id<-c(id,rep(gg,each=n[gg]))\n    x11<-runif(n[gg])\n    x1<-c(x1,x11)\n    \n    # x22<-runif(n[gg])\n    # x2<-c(x2,x22) \n    if (norm.re.intercept==TRUE) re.int<-rnorm(1,sd=sqrt(var.re.intercept)) else re.int<-rgamma(1,shape=shape.re.intercept,scale=scale.re.intercept)-shape.re.intercept*scale.re.intercept\n    \n    b<-rep(re.int,each=n[gg])\n    \n    \n    \n    if (norm.eps==TRUE) eps<-rnorm(n[gg],sd=sqrt(var.eps)) else eps<-rgamma(n[gg],shape=shape,scale=scale)-shape*scale\n    \n    if (sim.re.slope==TRUE) {\n      if (norm.re.slope==TRUE) re.slope<-rnorm(1,sd=sqrt(var.re.slope)) else re.slope<-rgamma(1,shape=shape.re.slope,scale=scale.re.slope)-shape.re.slope*scale.re.slope\n      \n      b2<-rep(re.slope,each=n[gg])\n      \n      if (sim.x2.qdr==FALSE)   y<-betas[1]+betas[2]*x11+b+b2*x11+eps  else y<-betas[1]+betas[2]*x11+b+b2*x11+eps+ b.qdr*x11**2\n    } else {\n      if (sim.x2.qdr==FALSE) y<-betas[1]+betas[2]*x11+b+eps   else y<-betas[1]+betas[2]*x11+b+eps+ b.qdr*x11**2\n      \n    }\n    yy<-c(yy,y)\n    \n  }\n  yy<-yy[-1]\n  x1<-x1[-1]\n  id<-id[-1]\n  df<-data.frame(id=id,y=yy,x1=x1)\n  \n  df\n  \n}\n\nii=1\nN=50\nn=rep(5,N)\nbetas=c(-1,1,1)\nx.prob=0.4\nnorm.eps=TRUE\nvar.eps=1\nshape=NULL\nscale=NULL\nnorm.re.intercept=TRUE\nvar.re.intercept=1\nshape.re.intercept=NULL\nscale.re.intercept=NULL\nsim.re.slope=TRUE\nnorm.re.slope=TRUE\nvar.re.slope=1\nshape.re.slope=NULL\nscale.re.slope=NULL\nsim.x2.qdr=TRUE\nb.qdr=1\nfit.re.slope=TRUE\n\n \n  \n  dat<-sim.data.cluster(N=N,n=n,betas=betas,norm.eps=norm.eps,var.eps=var.eps,shape=shape,scale=scale,norm.re.intercept=norm.re.intercept,var.re.intercept=var.re.intercept,shape.re.intercept=shape.re.intercept,\n                        scale.re.intercept=scale.re.intercept,sim.re.slope=sim.re.slope,\n                        norm.re.slope=norm.re.slope,var.re.slope=var.re.slope,shape.re.slope=shape.re.slope,scale.re.slope=scale.re.slope,sim.x2.qdr=sim.x2.qdr,b.qdr=b.qdr)\n  \n  \n  \n  if (fit.re.slope==TRUE) fit<-lme(y~x1,random=~x1|id,data=dat,method=\"REML\",control=lmeControl( returnObject = TRUE)) else fit<-lme(y~x1,random=~1|id,data=dat,method=\"REML\",control=lmeControl( returnObject = TRUE))\n  \n  \n  fit.gof<-gof.lmm.O.test(fit,residuals=\"individual\",std.type=2,use.correction.for.imbalance=FALSE,type= \"sign.flip\" ,M=25,order.by.original=TRUE,verbose=FALSE)\n  \n  res<-summary.gofLMM.testO(fit.gof)[,2]\n  res\n  \n\n\n",
    "created" : 1563950585051.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1304147496",
    "id" : "39EF290A",
    "lastKnownWriteTime" : 1563533607,
    "last_content_update" : 1567578099619,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}