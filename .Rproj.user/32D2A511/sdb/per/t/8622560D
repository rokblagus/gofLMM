{
    "collab_server" : "",
    "contents" : "\n##just a try\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\n\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\n txt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n#aids$obstime<-as.numeric(factor(aids$obstime))\n\n\n\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+drug:obstime+prevDiag    ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+drug:obstime,\ntype= \"simulation\" ,M=250,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+I(obstime^2)+obstime:drug+I(obstime^2):drug    +prevDiag  ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime  +I(obstime^2)+obstime:drug+I(obstime^2):drug   ,\ntype= \"simulation\" ,M=250,order.by.original=FALSE,force.permutation.with=FALSE,verbose=FALSE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+ I(obstime^2)+obstime:drug+I(obstime^2):drug +prevDiag  ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime  +I(obstime^2)+obstime:drug+I(obstime^2):drug ,\ntype= \"simulation\" ,M=250,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n\n\n\n\n#####figures for paper/supplementary\n\n####functions from package\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackage2SF.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\n txt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#fit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n#type= \"permutation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\ntype= \"sign.flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\n#fit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^4)+I(obstime^4):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#fit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n#type= \"permutation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^4)+I(obstime^4):drug ,\ntype= \"sign.flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\n#fit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^4)+I(obstime^4):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n#fit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n#type= \"permutation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^4)+I(obstime^4):drug ,\ntype= \"sign.flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackageSimulation.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\n txt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\ntype= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\ntype= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\ntype= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackage1.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\n txt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\ntype= \"permutation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\ntype= \"permutation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\ntype= \"permutation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\n\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackageSF.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\n\npdf(\"FigureIllustrationRealPackageSFCluster.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackageSIMPan.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                  M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                  M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"individual\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                  M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackageSIMPanCluster.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                     M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                     M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                     M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackageSimulationCluster.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                 type= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=FALSE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\n####need to run this\n\n\n\n\npdf(\"FigureIllustrationRealPackageSFClusterWeight.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"sign-flip\" ,M=500,order.by.original=TRUE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\n\npdf(\"FigureIllustrationRealPackageSIMPanClusterWeight.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                     M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                     M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm.pan(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                     M=500, verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\nlibrary(gofLMM)\nlibrary(nlme)\nlibrary(JSM)\n\n\npdf(\"FigureIllustrationRealPackageSimulationClusterWeight.pdf\",height=10,width=10)\n\n\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\ntxt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\n\n\nset.seed(1)\n\n\ndata(aids)\n\naids$ID<-as.numeric(aids$ID)\n\naids$sqrt.CD4<-sqrt(aids$CD4)\n\n#####model 1\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT      ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug ,\n                 type= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"A) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"B) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"C) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n#####model 2\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~1|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"D) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"E) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"F) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\n#####model 3\n\n\nfit<-lme( sqrt.CD4~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids, random=~obstime|ID,  control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit.gof<-gof.lmm(fit,residuals= \"cluster\" ,std.type=2,use.correction.for.imbalance=TRUE,subset.fix=sqrt.CD4~ obstime+obstime:drug  +I(obstime^2)+I(obstime^2):drug ,\n                 type= \"simulation\" ,M=500,order.by.original=FALSE,force.permutation.with=FALSE,verbose=TRUE)\n\n\nsm<-summary(fit.gof)\n\n\nplot.gofLMM.part(fit.gof$O,fit.gof$Om,type=2,fit.gof$predO,fit.gof$predOm,xlab=\"\",ylab=txt1,main=paste(\"G) KS=\",round(sm[1,2],4),\" CvM=\",round(sm[2,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$F,fit.gof$Fm,type=2,fit.gof$predF,fit.gof$predFm,xlab=\"\",ylab=txt2,main=paste(\"H) KS=\",round(sm[3,2],4),\" CvM=\",round(sm[4,2],4),sep=\"\"))\nplot.gofLMM.part(fit.gof$Fs,fit.gof$Fsm,type=2,fit.gof$predFs,fit.gof$predFsm,xlab=\"\",ylab=txt3,main=paste(\"I) KS=\",round(sm[5,2],4),\" CvM=\",round(sm[6,2],4),sep=\"\"))\n\n\n\ndev.off()\n\n\n\n\n\n#################old\n\n\n#####illustration by using the simulation approach, it does not have enough power\n\npdf(\"FigureIllustrationRealSimulation.pdf\",height=10,width=10)\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\ntxt1<-expression(W^O)\n txt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n\n\nlibrary(JSM)\n\nset.seed(1)\n\n\ndata(aids)\n\n\nlibrary(MASS)\nlibrary(nlme)\nlibrary(mvtnorm)\n\n\n\n\nM=500\n\n\n\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\n\n\n#####model 1\n\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT      ,data=aids)\n#x<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT +I(obstime^2)+ I(obstime^2):drug    ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\nfit<-lme( y~ x-1,data=df, random=~1|id )\n\n#fit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nfit.re.slope=FALSE\nsame.random.number=FALSE #settting to TRUE gives PAn and weird results\n\nN<-length(unique(df$id))\nn<-table(df$id)\n\n#start gof analysis\n\n\n\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nbeta.f<-fixef(fit)\n\nV<-list()\nV.i<-list()\nZ<-list()\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nif (fit.re.slope==TRUE)  Z[[gg]]<-cbind(1,df$x2[df$id==gg]) else Z[[gg]]<-matrix(rep(1,n[gg]),ncol=1)\nI<-diag(rep(1),n[[gg]])\nV[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]])+sigma.est*I\nV.i[[gg]]<-V[[gg]]%^%(-1)\nif (n[gg]!=1) H<-H+t(x[df$id==gg,])%*%V.i[[gg]]%*%x[df$id==gg,] else H<-H+matrix(x[df$id==gg,],ncol=1)%*%V.i[[gg]]%*%x[df$id==gg,]\n}\n\nH.i<-solve(H)\n\n\nJ<-list()\nA<-list()\nB<-list()\n\nres.i.c<-resI\n\n\nfor (gg in 1:N){\n\n\nif (n[gg]!=1) A[[gg]]<-sigma.est*V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%t(x[df$id==gg,]) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]]) else A[[gg]]<-sigma.est*V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%matrix(x[df$id==gg,],ncol=1) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]])\n\nif (n[gg]!=1) B[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]]) %*%V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%t(x[df$id==gg,]) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]]) else B[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]]) %*%V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%matrix(x[df$id==gg,],ncol=1) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]])\n\n\n\nI<-diag(rep(1,n[gg]))\n#J[[gg]]<-I-(A[[gg]]+B[[gg]])%*%ginv(B[[gg]])%*% Z[[gg]]%*%D%*%t(Z[[gg]])%*%V.i[[gg]]\n J[[gg]]<-sigma.est*V.i[[gg]]- A[[gg]] %*%ginv(B[[gg]])%*% Z[[gg]]%*%D%*%t(Z[[gg]])%*%V.i[[gg]]\n\n\n#res.i.c[df$id==gg]<- J[[gg]]%*% resP[df$id==gg]\nres.i.c[df$id==gg]<- J[[gg]]%*% resI[df$id==gg]\n\n\n\n}\n\n\n\nV.ii.inv<-list()\nV.ii<-list()\n\n\nrespermute<-NA\nresIst<-NA\nresIst1<-NA\nfor (gg in 1:N){\n\nV.ii.inv[[gg]]<-V[[gg]]%^%(-0.5)\nV.ii[[gg]]<-V[[gg]]%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMp2<-V.ii.inv[[gg]]%*%resPMp\n\n#respermute<-c(respermute,resPMp2/sqrt(n[gg]))\nrespermute<-c(respermute,resPMp2)\n\nresPMpC<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMpC2<-V.ii.inv[[gg]]%*%resPMpC\nresPMpC2<-resPMpC2\n\nresPMpC1<-matrix(resI[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMpC21<-V.ii.inv[[gg]]%*%resPMpC1\nresPMpC21<-resPMpC21\n\n#resPMpC2<-resPMpC\n#resIst<-c(resIst,resPMpC2/sqrt(n[gg]))\nresIst<-c(resIst,resPMpC2)\nresIst1<-c(resIst1,resPMpC21)\n\n\n\n}\n\nrespermute<-respermute[-1]\nresIst<-resIst[-1]\nresIst1<-resIst1[-1]\n\n\n\nresoI2<-resIst[orI]\n t01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\nWI2<-1/sqrt(N )*cumsum(resoI2)\n\n#resoP2<-respermute[orP]\n\nresoP2<-resIst1[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\n\nWP2<-1/sqrt(N )*cumsum(resoP2)\n\nestP1<- x[,-3]%*%fixef(fit)[-3]\n#estP1<- x[,-c(1,3)]%*%fixef(fit)[-c(1,3)] #as expected it makes no dif if you omit the inter\n\norP1<-order(estP1)\nresoP21<-resIst1[orP1]\n t01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nresoP21[ig]<-sum(resoP21[ig])/length(ig)\n}\nWP21<-1/sqrt(N)*cumsum(resoP21)\n\n\n\nWsP2<-WsP21<- WsI2 <-list()\nfor (iiii in 1:M){\n\nif (same.random.number==FALSE){\n smp<-rnorm(nrow(x))\n\nnewres<-NA\nfor (gg in 1:N){\nnewres<-c(newres, V.ii[[gg]]%*%( (respermute*smp)[df$id==gg]))\n}\n\nnewres<-newres[-1]\n\n} else {\nsmp<-rnorm(1)\nnewres<-NA\nfor (gg in 1:N){\nnewres<-c(newres,    (respermute*smp)[df$id==gg] )\n}\nnewres<-newres[-1]\n\n\n}\n##prvi del procesa\n\nprvi.del.p1<-prvi.del.p<-prvi.del<-NA\n\nfor (gg in 1:N){\n\nprvi.del<-c(prvi.del,V.ii.inv[[gg]]%*%J[[gg]]%*%(newres[df$id==gg]))\nprvi.del.p<-c(prvi.del.p,V.ii.inv[[gg]]%*%(newres[df$id==gg]))\nprvi.del.p1<-c(prvi.del.p1,V.ii.inv[[gg]]%*%(newres[df$id==gg]))\n\n#prvi.del<-c(prvi.del,J[[gg]]%*%(newres[df$id==gg]))\n\n\n}\n\nprvi.del<-prvi.del[-1]\nprvi.del.p<-prvi.del.p[-1]\nprvi.del.p1<-prvi.del.p1[-1]\n\nprvi.del.o<-prvi.del[orI]\n\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nprvi.del.o[ig]<-sum(prvi.del.o[ig])/length(ig)\n}\n\n\nI<-1/sqrt(N)*cumsum(prvi.del.o)\nprvi.del.op<-prvi.del.p[orP]\n\nt01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nprvi.del.op[ig]<-sum(prvi.del.op[ig])/length(ig)\n}\n\n\nIp<-1/sqrt(N)*cumsum(prvi.del.op)\n\nprvi.del.op1<-prvi.del.p1[orP1]\n\nt01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nprvi.del.op1[ig]<-sum(prvi.del.op1[ig])/length(ig)\n}\n\n\nIp1<-1/sqrt(N)*cumsum(prvi.del.op1)\n\n\n\ndva.1<-matrix(0,ncol=1,nrow=ncol(x))\n\nfor (gg  in 1:N){\n\nif (n[gg]!=1) dva.1<-dva.1+  t(x[df$id==gg,])%*%V.i[[gg]]%*%(newres[df$id==gg]) else dva.1<-dva.1+  matrix(x[df$id==gg,],ncol=1)%*%V.i[[gg]]%*%(newres[df$id==gg])\n\n}\n\ndrugi.del.p<-drugi.del.p1<-drugi.del<-NA\n\nfor (gg in 1:N){\n\n drugi.del<-c(drugi.del,V.ii.inv[[gg]]%*%J[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n drugi.del.p<-c(drugi.del.p,V.ii.inv[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n drugi.del.p1<-c(drugi.del.p1,V.ii.inv[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n\n#drugi.del<-c(drugi.del,J[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n\n}\n\ndrugi.del<-drugi.del[-1]\ndrugi.del.p<-drugi.del.p[-1]\ndrugi.del.p1<-drugi.del.p1[-1]\n\ndrugi.del.o<-drugi.del[orI]\n\n\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\ndrugi.del.o[ig]<-sum(drugi.del.o[ig])/length(ig)\n}\n\n\ndrugi.del.op<-drugi.del.p[orP]\nt01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\ndrugi.del.op[ig]<-sum(drugi.del.op[ig])/length(ig)\n}\n\ndrugi.del.op1<-drugi.del.p1[orP1]\nt01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\ndrugi.del.op1[ig]<-sum(drugi.del.op1[ig])/length(ig)\n}\n\n\n\nII<-1/sqrt( N)*cumsum(drugi.del.o)\nIIp<-1/sqrt( N)*cumsum(drugi.del.op)\nIIp1<-1/sqrt( N)*cumsum(drugi.del.op1)\n\nWsI2[[iiii]]<-I-II\nWsP2[[iiii]]<-Ip-IIp\nWsP21[[iiii]]<-Ip1-IIp1\n\n}\n\n\n\n\n\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\n\n\nKSp<-max(abs(WP2))\nCvMp<-sum(WP2**2)\n\nKSp1<-max(abs(WP21))\nCvMp1<-sum(WP21**2)\n\n\nKSip<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMip<-unlist(lapply(WsP2,function(x) sum(x**2) ))\n\nKSip1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMip1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\n\n\n\npKSp<-(sum(KSip>=KSp)+1)/(M+1)\npCvMp<-(sum(CvMip>=CvMp)+1)/(M+1)\n\npKSp1<-(sum(KSip1>=KSp1)+1)/(M+1)\npCvMp1<-(sum(CvMip1>=CvMp1)+1)/(M+1)\n\n\n\nresij<-c( pKS,pCvM,pKSp,pCvMp,pKSp1,pCvMp1 )\n\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt1,main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\n\nplot(1:nrow(x),WP2,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt2,main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsP2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WP2,type=\"s\" )\n\n\n\nplot(1:nrow(x),WP21,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt3,main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsP21[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WP21,type=\"s\" )\n\n\n\n\n\n\n#####model 2\n\n\n#x<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT      ,data=aids)\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT +I(obstime^2)+ I(obstime^2):drug    ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\nfit<-lme( y~ x-1,data=df, random=~1|id )\n\n#fit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nfit.re.slope=FALSE\nsame.random.number=FALSE #settting to TRUE gives PAn and weird results\n\nN<-length(unique(df$id))\nn<-table(df$id)\n\n#start gof analysis\n\n\n\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nbeta.f<-fixef(fit)\n\nV<-list()\nV.i<-list()\nZ<-list()\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nif (fit.re.slope==TRUE)  Z[[gg]]<-cbind(1,df$x2[df$id==gg]) else Z[[gg]]<-matrix(rep(1,n[gg]),ncol=1)\nI<-diag(rep(1),n[[gg]])\nV[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]])+sigma.est*I\nV.i[[gg]]<-V[[gg]]%^%(-1)\nif (n[gg]!=1) H<-H+t(x[df$id==gg,])%*%V.i[[gg]]%*%x[df$id==gg,] else H<-H+matrix(x[df$id==gg,],ncol=1)%*%V.i[[gg]]%*%x[df$id==gg,]\n}\n\nH.i<-solve(H)\n\n\nJ<-list()\nA<-list()\nB<-list()\n\nres.i.c<-resI\n\n\nfor (gg in 1:N){\n\n\nif (n[gg]!=1) A[[gg]]<-sigma.est*V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%t(x[df$id==gg,]) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]]) else A[[gg]]<-sigma.est*V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%matrix(x[df$id==gg,],ncol=1) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]])\n\nif (n[gg]!=1) B[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]]) %*%V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%t(x[df$id==gg,]) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]]) else B[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]]) %*%V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%matrix(x[df$id==gg,],ncol=1) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]])\n\n\n\nI<-diag(rep(1,n[gg]))\n#J[[gg]]<-I-(A[[gg]]+B[[gg]])%*%ginv(B[[gg]])%*% Z[[gg]]%*%D%*%t(Z[[gg]])%*%V.i[[gg]]\n J[[gg]]<-sigma.est*V.i[[gg]]- A[[gg]] %*%ginv(B[[gg]])%*% Z[[gg]]%*%D%*%t(Z[[gg]])%*%V.i[[gg]]\n\n\n#res.i.c[df$id==gg]<- J[[gg]]%*% resP[df$id==gg]\nres.i.c[df$id==gg]<- J[[gg]]%*% resI[df$id==gg]\n\n\n\n}\n\n\n\nV.ii.inv<-list()\nV.ii<-list()\n\n\nrespermute<-NA\nresIst<-NA\nresIst1<-NA\nfor (gg in 1:N){\n\nV.ii.inv[[gg]]<-V[[gg]]%^%(-0.5)\nV.ii[[gg]]<-V[[gg]]%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMp2<-V.ii.inv[[gg]]%*%resPMp\n\n#respermute<-c(respermute,resPMp2/sqrt(n[gg]))\nrespermute<-c(respermute,resPMp2)\n\nresPMpC<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMpC2<-V.ii.inv[[gg]]%*%resPMpC\nresPMpC2<-resPMpC2\n\nresPMpC1<-matrix(resI[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMpC21<-V.ii.inv[[gg]]%*%resPMpC1\nresPMpC21<-resPMpC21\n\n#resPMpC2<-resPMpC\n#resIst<-c(resIst,resPMpC2/sqrt(n[gg]))\nresIst<-c(resIst,resPMpC2)\nresIst1<-c(resIst1,resPMpC21)\n\n\n\n}\n\nrespermute<-respermute[-1]\nresIst<-resIst[-1]\nresIst1<-resIst1[-1]\n\n\n\nresoI2<-resIst[orI]\n t01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\nWI2<-1/sqrt(N )*cumsum(resoI2)\n\n#resoP2<-respermute[orP]\n\nresoP2<-resIst1[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\n\nWP2<-1/sqrt(N )*cumsum(resoP2)\n\nestP1<- x[,-3]%*%fixef(fit)[-3]\norP1<-order(estP1)\nresoP21<-resIst1[orP1]\n t01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nresoP21[ig]<-sum(resoP21[ig])/length(ig)\n}\nWP21<-1/sqrt(N)*cumsum(resoP21)\n\n\n\nWsP2<-WsP21<- WsI2 <-list()\nfor (iiii in 1:M){\n\nif (same.random.number==FALSE){\n smp<-rnorm(nrow(x))\n\nnewres<-NA\nfor (gg in 1:N){\nnewres<-c(newres, V.ii[[gg]]%*%( (respermute*smp)[df$id==gg]))\n}\n\nnewres<-newres[-1]\n\n} else {\nsmp<-rnorm(1)\nnewres<-NA\nfor (gg in 1:N){\nnewres<-c(newres,    (respermute*smp)[df$id==gg] )\n}\nnewres<-newres[-1]\n\n\n}\n##prvi del procesa\n\nprvi.del.p1<-prvi.del.p<-prvi.del<-NA\n\nfor (gg in 1:N){\n\nprvi.del<-c(prvi.del,V.ii.inv[[gg]]%*%J[[gg]]%*%(newres[df$id==gg]))\nprvi.del.p<-c(prvi.del.p,V.ii.inv[[gg]]%*%(newres[df$id==gg]))\nprvi.del.p1<-c(prvi.del.p1,V.ii.inv[[gg]]%*%(newres[df$id==gg]))\n\n#prvi.del<-c(prvi.del,J[[gg]]%*%(newres[df$id==gg]))\n\n\n}\n\nprvi.del<-prvi.del[-1]\nprvi.del.p<-prvi.del.p[-1]\nprvi.del.p1<-prvi.del.p1[-1]\n\nprvi.del.o<-prvi.del[orI]\n\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nprvi.del.o[ig]<-sum(prvi.del.o[ig])/length(ig)\n}\n\n\nI<-1/sqrt(N)*cumsum(prvi.del.o)\nprvi.del.op<-prvi.del.p[orP]\n\nt01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nprvi.del.op[ig]<-sum(prvi.del.op[ig])/length(ig)\n}\n\n\nIp<-1/sqrt(N)*cumsum(prvi.del.op)\n\nprvi.del.op1<-prvi.del.p1[orP1]\n\nt01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nprvi.del.op1[ig]<-sum(prvi.del.op1[ig])/length(ig)\n}\n\n\nIp1<-1/sqrt(N)*cumsum(prvi.del.op1)\n\n\n\ndva.1<-matrix(0,ncol=1,nrow=ncol(x))\n\nfor (gg  in 1:N){\n\nif (n[gg]!=1) dva.1<-dva.1+  t(x[df$id==gg,])%*%V.i[[gg]]%*%(newres[df$id==gg]) else dva.1<-dva.1+  matrix(x[df$id==gg,],ncol=1)%*%V.i[[gg]]%*%(newres[df$id==gg])\n\n}\n\ndrugi.del.p<-drugi.del.p1<-drugi.del<-NA\n\nfor (gg in 1:N){\n\n drugi.del<-c(drugi.del,V.ii.inv[[gg]]%*%J[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n drugi.del.p<-c(drugi.del.p,V.ii.inv[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n drugi.del.p1<-c(drugi.del.p1,V.ii.inv[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n\n#drugi.del<-c(drugi.del,J[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n\n}\n\ndrugi.del<-drugi.del[-1]\ndrugi.del.p<-drugi.del.p[-1]\ndrugi.del.p1<-drugi.del.p1[-1]\n\ndrugi.del.o<-drugi.del[orI]\n\n\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\ndrugi.del.o[ig]<-sum(drugi.del.o[ig])/length(ig)\n}\n\n\ndrugi.del.op<-drugi.del.p[orP]\nt01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\ndrugi.del.op[ig]<-sum(drugi.del.op[ig])/length(ig)\n}\n\ndrugi.del.op1<-drugi.del.p1[orP1]\nt01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\ndrugi.del.op1[ig]<-sum(drugi.del.op1[ig])/length(ig)\n}\n\n\n\nII<-1/sqrt( N)*cumsum(drugi.del.o)\nIIp<-1/sqrt( N)*cumsum(drugi.del.op)\nIIp1<-1/sqrt( N)*cumsum(drugi.del.op1)\n\nWsI2[[iiii]]<-I-II\nWsP2[[iiii]]<-Ip-IIp\nWsP21[[iiii]]<-Ip1-IIp1\n\n}\n\n\n\n\n\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\n\n\nKSp<-max(abs(WP2))\nCvMp<-sum(WP2**2)\n\nKSp1<-max(abs(WP21))\nCvMp1<-sum(WP21**2)\n\n\nKSip<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMip<-unlist(lapply(WsP2,function(x) sum(x**2) ))\n\nKSip1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMip1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\n\n\n\npKSp<-(sum(KSip>=KSp)+1)/(M+1)\npCvMp<-(sum(CvMip>=CvMp)+1)/(M+1)\n\npKSp1<-(sum(KSip1>=KSp1)+1)/(M+1)\npCvMp1<-(sum(CvMip1>=CvMp1)+1)/(M+1)\n\n\n\nresij<-c( pKS,pCvM,pKSp,pCvMp,pKSp1,pCvMp1 )\n\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt1,main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\n\nplot(1:nrow(x),WP2,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt2,main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsP2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WP2,type=\"s\" )\n\n\n\nplot(1:nrow(x),WP21,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt3,main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsP21[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WP21,type=\"s\" )\n\n\n\n\n\n#####model 3\n\n\n#x<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT      ,data=aids)\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT +I(obstime^2)+ I(obstime^2):drug    ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\n#fit<-lme( y~ x-1,data=df, random=~1|id )\n\nfit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nfit.re.slope=TRUE\nsame.random.number=FALSE #settting to TRUE gives PAn and weird results\n\nN<-length(unique(df$id))\nn<-table(df$id)\n\n#start gof analysis\n\n\n\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nbeta.f<-fixef(fit)\n\nV<-list()\nV.i<-list()\nZ<-list()\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nif (fit.re.slope==TRUE)  Z[[gg]]<-cbind(1,df$x2[df$id==gg]) else Z[[gg]]<-matrix(rep(1,n[gg]),ncol=1)\nI<-diag(rep(1),n[[gg]])\nV[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]])+sigma.est*I\nV.i[[gg]]<-V[[gg]]%^%(-1)\nif (n[gg]!=1) H<-H+t(x[df$id==gg,])%*%V.i[[gg]]%*%x[df$id==gg,] else H<-H+matrix(x[df$id==gg,],ncol=1)%*%V.i[[gg]]%*%x[df$id==gg,]\n}\n\nH.i<-solve(H)\n\n\nJ<-list()\nA<-list()\nB<-list()\n\nres.i.c<-resI\n\n\nfor (gg in 1:N){\n\n\nif (n[gg]!=1) A[[gg]]<-sigma.est*V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%t(x[df$id==gg,]) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]]) else A[[gg]]<-sigma.est*V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%matrix(x[df$id==gg,],ncol=1) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]])\n\nif (n[gg]!=1) B[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]]) %*%V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%t(x[df$id==gg,]) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]]) else B[[gg]]<-Z[[gg]]%*%D%*%t(Z[[gg]]) %*%V.i[[gg]]%*%( V[[gg]]- x[df$id==gg,]%*%H.i%*%matrix(x[df$id==gg,],ncol=1) )%*%V.i[[gg]]%*%Z[[gg]]%*%D%*%t(Z[[gg]])\n\n\n\nI<-diag(rep(1,n[gg]))\n#J[[gg]]<-I-(A[[gg]]+B[[gg]])%*%ginv(B[[gg]])%*% Z[[gg]]%*%D%*%t(Z[[gg]])%*%V.i[[gg]]\n J[[gg]]<-sigma.est*V.i[[gg]]- A[[gg]] %*%ginv(B[[gg]])%*% Z[[gg]]%*%D%*%t(Z[[gg]])%*%V.i[[gg]]\n\n\n#res.i.c[df$id==gg]<- J[[gg]]%*% resP[df$id==gg]\nres.i.c[df$id==gg]<- J[[gg]]%*% resI[df$id==gg]\n\n\n\n}\n\n\n\nV.ii.inv<-list()\nV.ii<-list()\n\n\nrespermute<-NA\nresIst<-NA\nresIst1<-NA\nfor (gg in 1:N){\n\nV.ii.inv[[gg]]<-V[[gg]]%^%(-0.5)\nV.ii[[gg]]<-V[[gg]]%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMp2<-V.ii.inv[[gg]]%*%resPMp\n\n#respermute<-c(respermute,resPMp2/sqrt(n[gg]))\nrespermute<-c(respermute,resPMp2)\n\nresPMpC<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMpC2<-V.ii.inv[[gg]]%*%resPMpC\nresPMpC2<-resPMpC2\n\nresPMpC1<-matrix(resI[df$id==gg],ncol=1,nrow=n[gg],byrow=F)\nresPMpC21<-V.ii.inv[[gg]]%*%resPMpC1\nresPMpC21<-resPMpC21\n\n#resPMpC2<-resPMpC\n#resIst<-c(resIst,resPMpC2/sqrt(n[gg]))\nresIst<-c(resIst,resPMpC2)\nresIst1<-c(resIst1,resPMpC21)\n\n\n\n}\n\nrespermute<-respermute[-1]\nresIst<-resIst[-1]\nresIst1<-resIst1[-1]\n\n\n\nresoI2<-resIst[orI]\n t01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\nWI2<-1/sqrt(N )*cumsum(resoI2)\n\n#resoP2<-respermute[orP]\n\nresoP2<-resIst1[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\n\nWP2<-1/sqrt(N )*cumsum(resoP2)\n\nestP1<- x[,-3]%*%fixef(fit)[-3]\norP1<-order(estP1)\nresoP21<-resIst1[orP1]\n t01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nresoP21[ig]<-sum(resoP21[ig])/length(ig)\n}\nWP21<-1/sqrt(N)*cumsum(resoP21)\n\n\n\nWsP2<-WsP21<- WsI2 <-list()\nfor (iiii in 1:M){\n\nif (same.random.number==FALSE){\n smp<-rnorm(nrow(x))\n\nnewres<-NA\nfor (gg in 1:N){\nnewres<-c(newres, V.ii[[gg]]%*%( (respermute*smp)[df$id==gg]))\n}\n\nnewres<-newres[-1]\n\n} else {\nsmp<-rnorm(1)\nnewres<-NA\nfor (gg in 1:N){\nnewres<-c(newres,    (respermute*smp)[df$id==gg] )\n}\nnewres<-newres[-1]\n\n\n}\n##prvi del procesa\n\nprvi.del.p1<-prvi.del.p<-prvi.del<-NA\n\nfor (gg in 1:N){\n\nprvi.del<-c(prvi.del,V.ii.inv[[gg]]%*%J[[gg]]%*%(newres[df$id==gg]))\nprvi.del.p<-c(prvi.del.p,V.ii.inv[[gg]]%*%(newres[df$id==gg]))\nprvi.del.p1<-c(prvi.del.p1,V.ii.inv[[gg]]%*%(newres[df$id==gg]))\n\n#prvi.del<-c(prvi.del,J[[gg]]%*%(newres[df$id==gg]))\n\n\n}\n\nprvi.del<-prvi.del[-1]\nprvi.del.p<-prvi.del.p[-1]\nprvi.del.p1<-prvi.del.p1[-1]\n\nprvi.del.o<-prvi.del[orI]\n\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nprvi.del.o[ig]<-sum(prvi.del.o[ig])/length(ig)\n}\n\n\nI<-1/sqrt(N)*cumsum(prvi.del.o)\nprvi.del.op<-prvi.del.p[orP]\n\nt01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nprvi.del.op[ig]<-sum(prvi.del.op[ig])/length(ig)\n}\n\n\nIp<-1/sqrt(N)*cumsum(prvi.del.op)\n\nprvi.del.op1<-prvi.del.p1[orP1]\n\nt01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nprvi.del.op1[ig]<-sum(prvi.del.op1[ig])/length(ig)\n}\n\n\nIp1<-1/sqrt(N)*cumsum(prvi.del.op1)\n\n\n\ndva.1<-matrix(0,ncol=1,nrow=ncol(x))\n\nfor (gg  in 1:N){\n\nif (n[gg]!=1) dva.1<-dva.1+  t(x[df$id==gg,])%*%V.i[[gg]]%*%(newres[df$id==gg]) else dva.1<-dva.1+  matrix(x[df$id==gg,],ncol=1)%*%V.i[[gg]]%*%(newres[df$id==gg])\n\n}\n\ndrugi.del.p<-drugi.del.p1<-drugi.del<-NA\n\nfor (gg in 1:N){\n\n drugi.del<-c(drugi.del,V.ii.inv[[gg]]%*%J[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n drugi.del.p<-c(drugi.del.p,V.ii.inv[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n drugi.del.p1<-c(drugi.del.p1,V.ii.inv[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n\n#drugi.del<-c(drugi.del,J[[gg]]%*%x[df$id==gg,]%*%H.i%*%dva.1)\n\n}\n\ndrugi.del<-drugi.del[-1]\ndrugi.del.p<-drugi.del.p[-1]\ndrugi.del.p1<-drugi.del.p1[-1]\n\ndrugi.del.o<-drugi.del[orI]\n\n\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\ndrugi.del.o[ig]<-sum(drugi.del.o[ig])/length(ig)\n}\n\n\ndrugi.del.op<-drugi.del.p[orP]\nt01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\ndrugi.del.op[ig]<-sum(drugi.del.op[ig])/length(ig)\n}\n\ndrugi.del.op1<-drugi.del.p1[orP1]\nt01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\ndrugi.del.op1[ig]<-sum(drugi.del.op1[ig])/length(ig)\n}\n\n\n\nII<-1/sqrt( N)*cumsum(drugi.del.o)\nIIp<-1/sqrt( N)*cumsum(drugi.del.op)\nIIp1<-1/sqrt( N)*cumsum(drugi.del.op1)\n\nWsI2[[iiii]]<-I-II\nWsP2[[iiii]]<-Ip-IIp\nWsP21[[iiii]]<-Ip1-IIp1\n\n}\n\n\n\n\n\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\n\n\nKSp<-max(abs(WP2))\nCvMp<-sum(WP2**2)\n\nKSp1<-max(abs(WP21))\nCvMp1<-sum(WP21**2)\n\n\nKSip<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMip<-unlist(lapply(WsP2,function(x) sum(x**2) ))\n\nKSip1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMip1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\n\n\n\npKSp<-(sum(KSip>=KSp)+1)/(M+1)\npCvMp<-(sum(CvMip>=CvMp)+1)/(M+1)\n\npKSp1<-(sum(KSip1>=KSp1)+1)/(M+1)\npCvMp1<-(sum(CvMip1>=CvMp1)+1)/(M+1)\n\n\n\nresij<-c( pKS,pCvM,pKSp,pCvMp,pKSp1,pCvMp1 )\n\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt1,main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\n\nplot(1:nrow(x),WP2,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt2,main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsP2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WP2,type=\"s\" )\n\n\n\nplot(1:nrow(x),WP21,col=\"red\",type=\"s\",ylim=c(-1.5,1.5),xlab=\"\",ylab=txt3,main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsP21[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WP21,type=\"s\" )\n\n\ndev.off()\n\n\n\n\n\n###############################\n\n\n\n######signflip/permutation\n\n\n\n\n\n#####the final illustration\n\n##we need sign-flipping for O and permutations for F and Fs\n\nlibrary(JSM)\n\nset.seed(1)\n\n\ndata(aids)\n\n\npdf(\"FigureIllustrationRealNoni.pdf\",height=10,width=10)\npar(mfrow=c(3,3))\npar(mar=c(2,5,4,1))\n\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-TRUE #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\nM= 500\n\n#aids<-aids[aids$prevOI==\"AIDS\",]\n#aids<-aids[aids$obstime!=18,]\n#sum(table(aids$patient)-1)\n\n#ig<-as.numeric(names(table(aids$patient))[ which( table(aids$patient)==4 ) ])\n\n#ids<-which(as.numeric(aids$patient)%in%ig==TRUE)\n\n#aids<-aids[ids,]\n\ntxt1<-expression(W^O)\n txt2<-expression(W^F)\ntxt3<-expression(W^F^s)\n###model 1\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT      ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\n\nfit<-lme( y~ x-1,data=df, random=~1|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\n#resIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\n#resIS22<-c(resIS22,resISm22/sqrt(n))\nresIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\nestP1<- x[,-3]%*%fixef(fit)[-3]\norP1<-order(estP1)\nresoP21<-resIS22[orP1]\n t01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nresoP21[ig]<-sum(resoP21[ig])/length(ig)\n}\nWP21<-1/sqrt(N)*cumsum(resoP21)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\n\n\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\n\nWsP21<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\n#ressIS2<-c(ressIS2,resISms2/sqrt(n))\nressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\n#ressIS22<-c(ressIS22,resISms22/sqrt(n))\nressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\nestsP1<- x[,-3]%*%fixef(fits)[-3]\norsP1<-order(estsP1)\nresosP21<-ressIS22[orsP1]\n t01P<- estsP1\nfor (iii in as.numeric(names(table(t01P[orsP1]))[which(table(t01P[orsP1])>1)])){\nig<-which(round(t01P[orsP1],10)==round(iii,10))\nresosP21[ig]<-sum(resosP21[ig])/length(ig)\n}\nWsP21[[ii]]<-1/sqrt(N)*cumsum(resosP21)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\nKSiP1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMiP1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\nKSP1<-max(abs(WP21))\nCvMP1<-sum(WP21**2)\n\npKSF1<-(sum(KSiP1>=KSP1)+1)/(M+1)\npCvMF1<-(sum(CvMiP1>=CvMP1)+1)/(M+1)\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF1,pCvMF1)\n\n#par(mfrow=c(3,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\",ylab=txt1)\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nsign.flip<-FALSE #works only for TRUE!\npermute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\n#flip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\n\nWsP21<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\n#ressIS2<-c(ressIS2,resISms2/sqrt(n))\nressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\n#ressIS22<-c(ressIS22,resISms22/sqrt(n))\nressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\nestsP1<- x[,-3]%*%fixef(fits)[-3]\norsP1<-order(estsP1)\nresosP21<-ressIS22[orsP1]\n t01P<- estsP1\nfor (iii in as.numeric(names(table(t01P[orsP1]))[which(table(t01P[orsP1])>1)])){\nig<-which(round(t01P[orsP1],10)==round(iii,10))\nresosP21[ig]<-sum(resosP21[ig])/length(ig)\n}\nWsP21[[ii]]<-1/sqrt(N)*cumsum(resosP21)\n\n\n\n}\n\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\nKSiP1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMiP1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\nKSP1<-max(abs(WP21))\nCvMP1<-sum(WP21**2)\n\npKSF1<-(sum(KSiP1>=KSP1)+1)/(M+1)\npCvMF1<-(sum(CvMiP1>=CvMP1)+1)/(M+1)\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF1,pCvMF1)\n\n#par(mfrow=c(3,2))\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1.5,1.5),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\",ylab=txt2)\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\nplot(1:nrow(x),WP21,type=\"s\",ylim=c(-1.5,1.5),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\",ylab=txt3)\nfor (ii in 1:M){\nlines(1:nrow(x),WsP21[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP21,type=\"s\")\n\n\n\n\n###model 2\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug     ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\n\nfit<-lme( y~ x-1,data=df, random=~1|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\n#resIS2<-c(resIS2,resISm2/sqrt(n))\nresIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\n#resIS22<-c(resIS22,resISm22/sqrt(n))\nresIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\nestP1<- x[,-3]%*%fixef(fit)[-3]\norP1<-order(estP1)\nresoP21<-resIS22[orP1]\n t01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nresoP21[ig]<-sum(resoP21[ig])/length(ig)\n}\nWP21<-1/sqrt(N)*cumsum(resoP21)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\n\n\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nWsP21<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\n#ressIS2<-c(ressIS2,resISms2/sqrt(n))\nressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\n#ressIS22<-c(ressIS22,resISms22/sqrt(n))\nressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\nestsP1<- x[,-3]%*%fixef(fits)[-3]\norsP1<-order(estsP1)\nresosP21<-ressIS22[orsP1]\n t01P<- estsP1\nfor (iii in as.numeric(names(table(t01P[orsP1]))[which(table(t01P[orsP1])>1)])){\nig<-which(round(t01P[orsP1],10)==round(iii,10))\nresosP21[ig]<-sum(resosP21[ig])/length(ig)\n}\nWsP21[[ii]]<-1/sqrt(N)*cumsum(resosP21)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\nKSiP1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMiP1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\nKSP1<-max(abs(WP21))\nCvMP1<-sum(WP21**2)\n\npKSF1<-(sum(KSiP1>=KSP1)+1)/(M+1)\npCvMF1<-(sum(CvMiP1>=CvMP1)+1)/(M+1)\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF1,pCvMF1)\n\n#par(mfrow=c(3,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\",ylab=txt1)\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\n\n\n\n\nsign.flip<-FALSE #works only for TRUE!\npermute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\n#flip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nWsP21<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\n#ressIS2<-c(ressIS2,resISms2/sqrt(n))\nressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\n#ressIS22<-c(ressIS22,resISms22/sqrt(n))\nressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\nestsP1<- x[,-3]%*%fixef(fits)[-3]\norsP1<-order(estsP1)\nresosP21<-ressIS22[orsP1]\n t01P<- estsP1\nfor (iii in as.numeric(names(table(t01P[orsP1]))[which(table(t01P[orsP1])>1)])){\nig<-which(round(t01P[orsP1],10)==round(iii,10))\nresosP21[ig]<-sum(resosP21[ig])/length(ig)\n}\nWsP21[[ii]]<-1/sqrt(N)*cumsum(resosP21)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\nKSiP1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMiP1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\nKSP1<-max(abs(WP21))\nCvMP1<-sum(WP21**2)\n\npKSF1<-(sum(KSiP1>=KSP1)+1)/(M+1)\npCvMF1<-(sum(CvMiP1>=CvMP1)+1)/(M+1)\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF1,pCvMF1)\n\n#par(mfrow=c(3,2))\n\n\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1.5,1.5),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\",ylab=txt2)\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\nplot(1:nrow(x),WP21,type=\"s\",ylim=c(-1.5,1.5),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\",ylab=txt3)\nfor (ii in 1:M){\nlines(1:nrow(x),WsP21[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP21,type=\"s\")\n\n\n\n\n\n\n\n\n\n####model 3\n\n\n\n\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT  +I(obstime^2)+I(obstime^2):drug   ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\nfit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\n#resIS2<-c(resIS2,resISm2/sqrt(n))\nresIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\n#resIS22<-c(resIS22,resISm22/sqrt(n))\nresIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\nestP1<- x[,-3]%*%fixef(fit)[-3]\norP1<-order(estP1)\nresoP21<-resIS22[orP1]\n t01P<- estP1\nfor (ii in as.numeric(names(table(t01P[orP1]))[which(table(t01P[orP1])>1)])){\nig<-which(round(t01P[orP1],10)==round(ii,10))\nresoP21[ig]<-sum(resoP21[ig])/length(ig)\n}\nWP21<-1/sqrt(N)*cumsum(resoP21)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\n\nWsP21<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\n#ressIS2<-c(ressIS2,resISms2/sqrt(n))\nressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\n#ressIS22<-c(ressIS22,resISms22/sqrt(n))\nressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\n\nestsP1<- x[,-3]%*%fixef(fits)[-3]\norsP1<-order(estsP1)\nresosP21<-ressIS22[orsP1]\n t01P<- estsP1\nfor (iii in as.numeric(names(table(t01P[orsP1]))[which(table(t01P[orsP1])>1)])){\nig<-which(round(t01P[orsP1],10)==round(iii,10))\nresosP21[ig]<-sum(resosP21[ig])/length(ig)\n}\nWsP21[[ii]]<-1/sqrt(N)*cumsum(resosP21)\n\n\n}\n\n###get the test stats, ps and plots\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\nKSiP1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMiP1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\nKSP1<-max(abs(WP21))\nCvMP1<-sum(WP21**2)\n\npKSF1<-(sum(KSiP1>=KSP1)+1)/(M+1)\npCvMF1<-(sum(CvMiP1>=CvMP1)+1)/(M+1)\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF1,pCvMF1)\n\n#par(mfrow=c(3,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\",ylab=txt1)\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\n\n\n\nsign.flip<-FALSE #works only for TRUE!\npermute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\n#flip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\n\nWsP21<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\n#ressIS2<-c(ressIS2,resISms2/sqrt(n))\nressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\n#ressIS22<-c(ressIS22,resISms22/sqrt(n))\nressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\n\nestsP1<- x[,-3]%*%fixef(fits)[-3]\norsP1<-order(estsP1)\nresosP21<-ressIS22[orsP1]\n t01P<- estsP1\nfor (iii in as.numeric(names(table(t01P[orsP1]))[which(table(t01P[orsP1])>1)])){\nig<-which(round(t01P[orsP1],10)==round(iii,10))\nresosP21[ig]<-sum(resosP21[ig])/length(ig)\n}\nWsP21[[ii]]<-1/sqrt(N)*cumsum(resosP21)\n\n\n}\n\n###get the test stats, ps and plots\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\nKSiP1<-unlist(lapply(WsP21,function(x) max(abs(x)) ))\nCvMiP1<-unlist(lapply(WsP21,function(x) sum(x**2) ))\nKSP1<-max(abs(WP21))\nCvMP1<-sum(WP21**2)\n\npKSF1<-(sum(KSiP1>=KSP1)+1)/(M+1)\npCvMF1<-(sum(CvMiP1>=CvMP1)+1)/(M+1)\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF1,pCvMF1)\n\n#par(mfrow=c(3,2))\n\n\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1.5,1.5),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\",ylab=txt2)\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\nplot(1:nrow(x),WP21,type=\"s\",ylim=c(-1.5,1.5),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\",ylab=txt3)\nfor (ii in 1:M){\nlines(1:nrow(x),WsP21[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP21,type=\"s\")\n\n\n\n\ndev.off()\n\n\n\n\n\n\n######old code\n\n\n####model 3\n\n\n\n\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT +I(obstime^2)+I(obstime^2):drug    ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\nfit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n#resIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n#resIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n#ressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n#ressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(3,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n####model 2\n\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT  +I(obstime^2) +I(obstime^2):drug   ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\n\nfit<-lme( y~ x-1,data=df, random=~1|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n#resIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n#resIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n#ressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n#ressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(3,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n####model 3\n\n\n\n\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT  +I(obstime^2) +I(obstime^2):drug   ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\nfit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n#resIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n#resIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n#ressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n#ressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(3,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n####model 4\n\n\n ind.proc=TRUE\nsign.flip=TRUE\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT  +I(obstime^2)+I(obstime^2):drug  ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\nfit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n#resIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n#resIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nif (sign.flip==TRUE) smp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-df$y\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys[which(df$id==gg)]<-  estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg])\n\n} else {\n\nif (n==1) smp<-which(df$id==gg) else smp<-sample(which(df$id==gg))\nys[which(df$id==gg)]<-estP[df$id==gg]+  V.i%*% (respermute[smp])\n\n}\n\n}\n#ys<-ys[-1]\n\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n#ressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n#ressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n####model 5\n\n\n\n\n\nx<-model.matrix(sqrt(CD4)~ obstime+obstime:drug+AZT +I(obstime^2) +I(obstime^3)+I(obstime^4):drug+I(obstime^2):drug +I(obstime^3):drug+I(obstime^4):drug  ,data=aids)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\ndf$x2<-aids$obstime\n\nfit<-lme( y~ x-1,data=df, random=~x2|id )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n#resIS2<-c(resIS2,resISm2 )\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n#resIS22<-c(resIS22,resISm22 )\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n#WI2<-1/sqrt(N*4)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n#WP2<-1/sqrt(N*4)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x2[df$id==gg])\n\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n#ressIS2<-c(ressIS2,resISms2 )\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n#ressIS22<-c(ressIS22,resISms22 )\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n# WsI2[[ii]]<-1/sqrt(N*4)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n#WsP2[[ii]]<-1/sqrt(N*4)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n\n###########################\n\n\nlibrary(mdhglm)\n\ndata(aids)\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-TRUE  #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\nM=100\n\nfit.re<-TRUE\n\nfit<-lme(CD4~obstime+obstime:drug+I(obstime^2)+I(obstime^2):drug+I(obstime^3)+I(obstime^3):drug+I(obstime^4)+I(obstime^4):drug,data=aids,random=~1|patient,method=\"REML\")\n\nfit<-lme(sqrt(CD4)~obstime+obstime:drug +I(obstime^2)+I(obstime^2):drug ,data=aids,random=~1|patient,method=\"REML\")\nfit<-lme(sqrt(CD4)~factor(obstime)+factor(obstime):drug  ,data=aids,random=~1|patient,method=\"REML\")\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$id<-aids$patient\n\nx<-model.matrix(sqrt(CD4) ~ factor(obstime)+drug + factor(obstime):drug,data=aids)\n\n\nfit<-lme( y~ x-1 ,data=df, random=~x[,2]|id,method=\"REML\" )\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n#resoI2<-resI[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\n#WI2<-cumsum(sapply( split( resoI2,estI[orI]  ) ,sum)   )/sqrt(length(split( resoI2,estI[orI]  )))\n\n#resoP2<-resIS22[orP]\nresoP2<-resI[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],10)==round(ii,10))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)* cumsum(resoP2)\n\n#WP2<-cumsum(sapply( split( resoP2,estP[orP]  ) ,sum)   )/sqrt(length(split( resoP2,estP[orP]  )))\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\n WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (fit.re==FALSE) Z<-matrix(1,ncol=1,nrow=n) else Z<-cbind(1,x1[df$id==gg])\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n#resosP2<-ressIS22[orsP]\nresosP2<-ressI[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n#WsI2[[ii]]<-cumsum(sapply( split( resosI2,estsI[orsI]  ) ,sum)   )/sqrt(length(split( resosI2,estsI[orsI]  )))\n\n\n#WsP2[[ii]]<-cumsum(sapply( split( resosP2,estsP[orsP]  ) ,sum)   )/sqrt(length(split( resosP2,estsP[orsP]  )))\n\n\n\n}\n\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\npar(mfrow=c(4,2))\n\nplot( WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines( WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines( WI2,type=\"s\" )\n\n\nplot( WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines( WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines( WP2,type=\"s\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##################\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-TRUE  #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\n\n\n\n\nlibrary(catdata)\n\nM=100\ndata(aids)\n\n\nfit<-lme( sqrt(cd4)~ time+drugs+partners+packs+sqrt(cesd-min(cesd))+I(time^2)+I(time^3)+I(time^4),random=~time|person,data=aids,method=\"REML\" )\n\nx1<-aids$time\nx2<-aids$drugs\nx3<-aids$partners\nx4<-aids$packs\nx5<-sqrt(aids$cesd-min(aids$cesd))\nx6<-aids$time**2\nx7<-aids$time**3\nx8<-aids$time**4\n\n\n\nx<-cbind(1,x1,x2,x3,x4,x5,x6,x7,x8  )\n\ndf<-aids\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-sqrt(aids$cd4)\ndf$id<-aids$person\n\nfit<-lme( y~ x1+x2+x3 +x4+x5+x6+x7+x8 ,data=df, random=~x1|id,method=\"REML\" )\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2,7:10)]%*%fixef(fit)[c(1,2,7:10)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a1<-x[,c(1,5)]%*%fixef(fit)[c(1,5)]\norP.a1<-order(estP.a1)\nresoP2.a1<-resIS22[orP.a1]\n t01P<- estP.a1\nfor (ii in as.numeric(names(table(t01P[orP.a1]))[which(table(t01P[orP.a1])>1)])){\nig<-which(round(t01P[orP.a1],10)==round(ii,10))\nresoP2.a1[ig]<-sum(resoP2.a1[ig])/length(ig)\n}\nWP2.a1<-1/sqrt(N)*cumsum(resoP2.a1)\n\nestP.a2<-x[,c(1,6)]%*%fixef(fit)[c(1,6)]\norP.a2<-order(estP.a2)\nresoP2.a2<-resIS22[orP.a2]\n t01P<- estP.a2\nfor (ii in as.numeric(names(table(t01P[orP.a2]))[which(table(t01P[orP.a2])>1)])){\nig<-which(round(t01P[orP.a2],10)==round(ii,10))\nresoP2.a2[ig]<-sum(resoP2.a2[ig])/length(ig)\n}\nWP2.a2<-1/sqrt(N)*cumsum(resoP2.a2)\n\n\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a1<-WsP2.a2<-WsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x2+x3 +x4+x5, data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2)]%*%fixef(fits)[c(1,2)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n\n\nestP.a1s<-x[,c(1,5)]%*%fixef(fits)[c(1,5)]\norP.a1s<-order(estP.a1s)\nresoP2.a1s<-ressIS22[orP.a1s]\n t01P<- estP.a1s\nfor (iii in as.numeric(names(table(t01P[orP.a1s]))[which(table(t01P[orP.a1s])>1)])){\nig<-which(round(t01P[orP.a1s],10)==round(iii,10))\nresoP2.a1s[ig]<-sum(resoP2.a1s[ig])/length(ig)\n}\nWP2.a1s<-1/sqrt(N)*cumsum(resoP2.a1s)\n\nestP.a2s<-x[,c(1,6)]%*%fixef(fits)[c(1,6)]\norP.a2s<-order(estP.a2s)\nresoP2.a2s<-ressIS22[orP.a2s]\n t01P<- estP.a2s\nfor (iii in as.numeric(names(table(t01P[orP.a2s]))[which(table(t01P[orP.a2s])>1)])){\nig<-which(round(t01P[orP.a2s],10)==round(iii,10))\nresoP2.a2s[ig]<-sum(resoP2.a2s[ig])/length(ig)\n}\nWP2.a2s<-1/sqrt(N)*cumsum(resoP2.a2s)\n\nWsP2.a1[[ii]]<-WP2.a1s\nWsP2.a2[[ii]]<-WP2.a2s\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\nKSiP.a1<-unlist(lapply(WsP2.a1,function(x) max(abs(x)) ))\nCvMiP.a1<-unlist(lapply(WsP2.a1,function(x) sum(x**2) ))\nKSP.a1<-max(abs(WP2.a1))\nCvMP.a1<-sum(WP2.a1**2)\n\npKSF.a1<-(sum(KSiP.a1>=KSP.a1)+1)/(M+1)\npCvMF.a1<-(sum(CvMiP.a1>=CvMP.a1)+1)/(M+1)\n\n\nKSiP.a2<-unlist(lapply(WsP2.a2,function(x) max(abs(x)) ))\nCvMiP.a2<-unlist(lapply(WsP2.a2,function(x) sum(x**2) ))\nKSP.a2<-max(abs(WP2.a2))\nCvMP.a2<-sum(WP2.a2**2)\n\npKSF.a2<-(sum(KSiP.a2>=KSP.a2)+1)/(M+1)\npCvMF.a2<-(sum(CvMiP.a2>=CvMP.a2)+1)/(M+1)\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a,pKSF.a1,pCvMF.a1,pKSF.a2,pCvMF.a2)\n\npar(mfrow=c(4,6))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.a1,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[9],4),\", CvM p=\",round(resij[10],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a1[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a1,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[11],4),\", CvM p=\",round(resij[12],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a2,type=\"s\")\n\n\n\n\n#####model 2\n\nfit<-lme( cd4~ time+drugs+partners+packs+cesd+rcspline.eval(time,nk=7)+time:packs+rcspline.eval(time,nk=7):packs,random=~time|person,data=aids,method=\"REML\" )\nx1<-aids$time\nx2<-aids$drugs\nx3<-aids$partners\nx4<-aids$packs\nx5<-aids$cesd\nx6<-rcspline.eval(aids$time,nk=7)\nx7<-x1*x4\nx8<-x6*x4\n\nx<-cbind(1,x1,x2,x3,x4,x5,x6,x7,x8 )\n\ndf<-aids\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<- aids$cd4\ndf$id<-aids$person\n\nfit<-lme( y~ x1+x2+x3 +x4+x5+x6+x7+x8,data=df, random=~x1|id,method=\"REML\" )\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2,7:11)]%*%fixef(fit)[c(1,2,7:11)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a1<-x[,c(1,5)]%*%fixef(fit)[c(1,5)]\norP.a1<-order(estP.a1)\nresoP2.a1<-resIS22[orP.a1]\n t01P<- estP.a1\nfor (ii in as.numeric(names(table(t01P[orP.a1]))[which(table(t01P[orP.a1])>1)])){\nig<-which(round(t01P[orP.a1],10)==round(ii,10))\nresoP2.a1[ig]<-sum(resoP2.a1[ig])/length(ig)\n}\nWP2.a1<-1/sqrt(N)*cumsum(resoP2.a1)\n\nestP.a2<-x[,c(1,6)]%*%fixef(fit)[c(1,6)]\norP.a2<-order(estP.a2)\nresoP2.a2<-resIS22[orP.a2]\n t01P<- estP.a2\nfor (ii in as.numeric(names(table(t01P[orP.a2]))[which(table(t01P[orP.a2])>1)])){\nig<-which(round(t01P[orP.a2],10)==round(ii,10))\nresoP2.a2[ig]<-sum(resoP2.a2[ig])/length(ig)\n}\nWP2.a2<-1/sqrt(N)*cumsum(resoP2.a2)\n\n\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a1<-WsP2.a2<-WsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x2+x3 +x4+x5+x6, data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2,7:11)]%*%fixef(fits)[c(1,2,7:11)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n\n\nestP.a1s<-x[,c(1,5)]%*%fixef(fits)[c(1,5)]\norP.a1s<-order(estP.a1s)\nresoP2.a1s<-ressIS22[orP.a1s]\n t01P<- estP.a1s\nfor (iii in as.numeric(names(table(t01P[orP.a1s]))[which(table(t01P[orP.a1s])>1)])){\nig<-which(round(t01P[orP.a1s],10)==round(iii,10))\nresoP2.a1s[ig]<-sum(resoP2.a1s[ig])/length(ig)\n}\nWP2.a1s<-1/sqrt(N)*cumsum(resoP2.a1s)\n\nestP.a2s<-x[,c(1,6)]%*%fixef(fits)[c(1,6)]\norP.a2s<-order(estP.a2s)\nresoP2.a2s<-ressIS22[orP.a2s]\n t01P<- estP.a2s\nfor (iii in as.numeric(names(table(t01P[orP.a2s]))[which(table(t01P[orP.a2s])>1)])){\nig<-which(round(t01P[orP.a2s],10)==round(iii,10))\nresoP2.a2s[ig]<-sum(resoP2.a2s[ig])/length(ig)\n}\nWP2.a2s<-1/sqrt(N)*cumsum(resoP2.a2s)\n\nWsP2.a1[[ii]]<-WP2.a1s\nWsP2.a2[[ii]]<-WP2.a2s\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\nKSiP.a1<-unlist(lapply(WsP2.a1,function(x) max(abs(x)) ))\nCvMiP.a1<-unlist(lapply(WsP2.a1,function(x) sum(x**2) ))\nKSP.a1<-max(abs(WP2.a1))\nCvMP.a1<-sum(WP2.a1**2)\n\npKSF.a1<-(sum(KSiP.a1>=KSP.a1)+1)/(M+1)\npCvMF.a1<-(sum(CvMiP.a1>=CvMP.a1)+1)/(M+1)\n\n\nKSiP.a2<-unlist(lapply(WsP2.a2,function(x) max(abs(x)) ))\nCvMiP.a2<-unlist(lapply(WsP2.a2,function(x) sum(x**2) ))\nKSP.a2<-max(abs(WP2.a2))\nCvMP.a2<-sum(WP2.a2**2)\n\npKSF.a2<-(sum(KSiP.a2>=KSP.a2)+1)/(M+1)\npCvMF.a2<-(sum(CvMiP.a2>=CvMP.a2)+1)/(M+1)\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a,pKSF.a1,pCvMF.a1,pKSF.a2,pCvMF.a2)\n\n#par(mfrow=c(4,6))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.a1,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[9],4),\", CvM p=\",round(resij[10],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a1[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a1,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[11],4),\", CvM p=\",round(resij[12],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a2,type=\"s\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfit<-lme( sqrt(cd4)~ time+drugs+partners+packs+cesd+rcspline.eval(time,nk=8),random=~1|person,data=aids,method=\"REML\" )\n\nx1<-aids$time\nx2<-aids$drugs\nx3<-aids$partners\nx4<-aids$packs\nx5<-aids$cesd\nx6<-rcspline.eval(aids$time,nk=8)\n\nx<-cbind(1,x1,x2,x3,x4,x5,x6  )\n\ndf<-aids\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-sqrt(aids$cd4)\ndf$id<-aids$person\n\nfit<-lme( y~ x1+x2+x3 +x4+x5+x6 ,data=df, random=~1|id,method=\"REML\" )\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2,7:9)]%*%fixef(fit)[c(1,2,7:9)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a1<-x[,c(1,5)]%*%fixef(fit)[c(1,5)]\norP.a1<-order(estP.a1)\nresoP2.a1<-resIS22[orP.a1]\n t01P<- estP.a1\nfor (ii in as.numeric(names(table(t01P[orP.a1]))[which(table(t01P[orP.a1])>1)])){\nig<-which(round(t01P[orP.a1],10)==round(ii,10))\nresoP2.a1[ig]<-sum(resoP2.a1[ig])/length(ig)\n}\nWP2.a1<-1/sqrt(N)*cumsum(resoP2.a1)\n\nestP.a2<-x[,c(1,6)]%*%fixef(fit)[c(1,6)]\norP.a2<-order(estP.a2)\nresoP2.a2<-resIS22[orP.a2]\n t01P<- estP.a2\nfor (ii in as.numeric(names(table(t01P[orP.a2]))[which(table(t01P[orP.a2])>1)])){\nig<-which(round(t01P[orP.a2],10)==round(ii,10))\nresoP2.a2[ig]<-sum(resoP2.a2[ig])/length(ig)\n}\nWP2.a2<-1/sqrt(N)*cumsum(resoP2.a2)\n\n\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a1<-WsP2.a2<-WsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x2+x3 +x4+x5+x6, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2,7:9)]%*%fixef(fits)[c(1,2,7:9)]\n\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n\n\nestP.a1s<-x[,c(1,5)]%*%fixef(fits)[c(1,5)]\norP.a1s<-order(estP.a1s)\nresoP2.a1s<-ressIS22[orP.a1s]\n t01P<- estP.a1s\nfor (iii in as.numeric(names(table(t01P[orP.a1s]))[which(table(t01P[orP.a1s])>1)])){\nig<-which(round(t01P[orP.a1s],10)==round(iii,10))\nresoP2.a1s[ig]<-sum(resoP2.a1s[ig])/length(ig)\n}\nWP2.a1s<-1/sqrt(N)*cumsum(resoP2.a1s)\n\nestP.a2s<-x[,c(1,6)]%*%fixef(fits)[c(1,6)]\norP.a2s<-order(estP.a2s)\nresoP2.a2s<-ressIS22[orP.a2s]\n t01P<- estP.a2s\nfor (iii in as.numeric(names(table(t01P[orP.a2s]))[which(table(t01P[orP.a2s])>1)])){\nig<-which(round(t01P[orP.a2s],10)==round(iii,10))\nresoP2.a2s[ig]<-sum(resoP2.a2s[ig])/length(ig)\n}\nWP2.a2s<-1/sqrt(N)*cumsum(resoP2.a2s)\n\nWsP2.a1[[ii]]<-WP2.a1s\nWsP2.a2[[ii]]<-WP2.a2s\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\nKSiP.a1<-unlist(lapply(WsP2.a1,function(x) max(abs(x)) ))\nCvMiP.a1<-unlist(lapply(WsP2.a1,function(x) sum(x**2) ))\nKSP.a1<-max(abs(WP2.a1))\nCvMP.a1<-sum(WP2.a1**2)\n\npKSF.a1<-(sum(KSiP.a1>=KSP.a1)+1)/(M+1)\npCvMF.a1<-(sum(CvMiP.a1>=CvMP.a1)+1)/(M+1)\n\n\nKSiP.a2<-unlist(lapply(WsP2.a2,function(x) max(abs(x)) ))\nCvMiP.a2<-unlist(lapply(WsP2.a2,function(x) sum(x**2) ))\nKSP.a2<-max(abs(WP2.a2))\nCvMP.a2<-sum(WP2.a2**2)\n\npKSF.a2<-(sum(KSiP.a2>=KSP.a2)+1)/(M+1)\npCvMF.a2<-(sum(CvMiP.a2>=CvMP.a2)+1)/(M+1)\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a,pKSF.a1,pCvMF.a1,pKSF.a2,pCvMF.a2)\n\npar(mfrow=c(4,6))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.a1,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[9],4),\", CvM p=\",round(resij[10],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a1[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a1,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[11],4),\", CvM p=\",round(resij[12],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a2,type=\"s\")\n\n\n\n\n\n#####################\n\n\nlibrary(covBM)\n\ndata(cd4)\n\npar(mfrow=c(4,2))\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-TRUE #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\nM=100\n\n####model 1\n\n#fit<-lme( CD4~obstime+obstime:drug,data=aids, random=~1|patient )\n#fit<-lme( sqrt(CD4CNT)~t+t:treatmnt+visage  ,data=cd4, random=~1|newpid)\n#fit<-lme( CD4CNT~t+t:treatmnt+visage  ,data=cd4, random=~1|newpid)\nfit<-lme( CD4CNT~t+t:treatmnt+baseage  ,data=cd4, random=~1|newpid)\n\n#x0<-as.numeric(aids$prevOI)-1\nx1<-cd4$t\nx2<-cd4$treatmnt -1\nx3<-x1*x2\nx4<-cd4$baseage\n\nx<-cbind(1,x1,x3,x4 )\n\ndf<-cd4\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-cd4$CD4CNT\ndf$id<-cd4$newpid\n\nfit<-lme( y~ x1+x3 +x4,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2)]%*%fixef(fit)[c(1,2)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3 +x4, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2)]%*%fixef(fits)[c(1,2)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a)\n\npar(mfrow=c(4,4))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\n\n\n#####model 2\n\n#fit<-lme( sqrt(CD4CNT)~t+t:treatmnt+visage+t:visage  ,data=cd4, random=~1|newpid)\nfit<-lme( CD4CNT~t+t:treatmnt+baseage+t:baseage  ,data=cd4, random=~1|newpid)\n\n\n#x0<-as.numeric(aids$prevOI)-1\nx1<-cd4$t\nx2<-cd4$treatmnt -1\nx3<-x1*x2\nx4<-cd4$baseage\nx5<-x4*x1\nx<-cbind(1,x1,x3,x4,x5 )\n\ndf<-cd4\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-cd4$CD4CNT\ndf$id<-cd4$newpid\n\nfit<-lme( y~ x1+x3 +x4+x5,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2)]%*%fixef(fit)[c(1,2)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3 +x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2)]%*%fixef(fits)[c(1,2)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a)\n\n#par(mfrow=c(2,4))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\n\n\n\n\n\n#####model 3\n\n#fit<-lme( sqrt(CD4CNT)~t+t:treatmnt+visage+I(visage^2)  ,data=cd4, random=~1|newpid)\n#fit<-lme( CD4CNT~t+t:treatmnt+visage+I(visage^2)  ,data=cd4, random=~1|newpid)\nfit<-lme( CD4CNT~t+t:treatmnt+baseage+t:baseage +I(baseage^2)+I(baseage^2):t  ,data=cd4, random=~1|newpid)\n\n#x0<-as.numeric(aids$prevOI)-1\nx1<-cd4$t\nx2<-cd4$treatmnt -1\nx3<-x1*x2\nx4<-cd4$baseage\nx5<-x4*x1\nx6<-x4**2\nx7<-x6*x1\nx<-cbind(1,x1,x3,x4,x5,x6,x7 )\n\ndf<-cd4\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-cd4$CD4CNT\ndf$id<-cd4$newpid\n\nfit<-lme( y~ x1+x3 +x4+x5+x6+x7,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2)]%*%fixef(fit)[c(1,2)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3 +x4+x5+x6+x7, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2)]%*%fixef(fits)[c(1,2)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a)\n\n#par(mfrow=c(2,4))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\n\n\n#####model 4\n\n#fit<-lme( sqrt(CD4CNT)~t+t:treatmnt+visage+I(visage^2)  ,data=cd4, random=~1|newpid)\n#fit<-lme( CD4CNT~t+t:treatmnt+visage+I(visage^2)  ,data=cd4, random=~1|newpid)\nfit<-lme( CD4CNT~t+t:treatmnt+baseage+t:baseage +I(baseage^2)+I(baseage^2):t  ,data=cd4, random=~t|newpid)\n\n#x0<-as.numeric(aids$prevOI)-1\nx1<-cd4$t\nx2<-cd4$treatmnt -1\nx3<-x1*x2\nx4<-cd4$baseage\nx5<-x4*x1\nx6<-x4**2\nx7<-x6*x1\nx<-cbind(1,x1,x3,x4,x5,x6,x7 )\n\ndf<-cd4\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-cd4$CD4CNT\ndf$id<-cd4$newpid\n\nfit<-lme( y~ x1+x3 +x4+x5+x6+x7,data=df, random=~x1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2)]%*%fixef(fit)[c(1,2)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3 +x4+x5+x6+x7, data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2)]%*%fixef(fits)[c(1,2)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a)\n\n#par(mfrow=c(2,4))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\n\n#####model 5\n\n#fit<-lme( sqrt(CD4CNT)~t+t:treatmnt+visage+I(visage^2)  ,data=cd4, random=~1|newpid)\n#fit<-lme( CD4CNT~t+t:treatmnt+visage+I(visage^2)  ,data=cd4, random=~1|newpid)\nfit<-lme( sqrt(CD4CNT)~t+t:treatmnt+baseage+t:baseage +I(baseage^2)+I(baseage^2):t  ,data=cd4, random=~t|newpid)\n\n#x0<-as.numeric(aids$prevOI)-1\nx1<-cd4$t\nx2<-cd4$treatmnt -1\nx3<-x1*x2\nx4<-cd4$baseage\nx5<-x4*x1\nx6<-x4**2\nx7<-x6*x1\nx<-cbind(1,x1,x3,x4,x5,x6,x7 )\n\ndf<-cd4\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-sqrt(cd4$CD4CNT)\ndf$id<-cd4$newpid\n\nfit<-lme( y~ x1+x3 +x4+x5+x6+x7,data=df, random=~x1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2)]%*%fixef(fit)[c(1,2)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3 +x4+x5+x6+x7, data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n #Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,x1[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2)]%*%fixef(fits)[c(1,2)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a)\n\n#par(mfrow=c(2,4))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\n\n\n\n\n\n\n\n\n\n#####model 4\n\n\n\nfit<-lme( CD4CNT~t+visage+t:visage +I(visage^2)+t:I(visage^2)+t:treatmnt ,data=cd4, random=~1|newpid)\n\n\n#x0<-as.numeric(aids$prevOI)-1\nx1<-cd4$t\nx2<-cd4$treatmnt -1\nx3<-x1*x2\nx4<-cd4$visage\nx5<-x4*x1\nx6<-x4**2\nx7<-x6*x1\n\nx<-cbind(1,x1,x3,x4,x5,x6,x7 )\n\ndf<-cd4\n\n#df$y<-sqrt(cd4$CD4CNT)\ndf$y<-cd4$CD4CNT\ndf$id<-cd4$newpid\n\nfit<-lme( y~ x1+x3 +x4+x5+x6+x7,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nestP.t<-x[,c(1,2)]%*%fixef(fit)[c(1,2)]\norP.t<-order(estP.t)\nresoP2.t<-resIS22[orP.t]\n t01P<- estP.t\nfor (ii in as.numeric(names(table(t01P[orP.t]))[which(table(t01P[orP.t])>1)])){\nig<-which(round(t01P[orP.t],10)==round(ii,10))\nresoP2.t[ig]<-sum(resoP2.t[ig])/length(ig)\n}\nWP2.t<-1/sqrt(N)*cumsum(resoP2.t)\n\nestP.a<-x[,c(1,4)]%*%fixef(fit)[c(1,4)]\norP.a<-order(estP.a)\nresoP2.a<-resIS22[orP.a]\n t01P<- estP.a\nfor (ii in as.numeric(names(table(t01P[orP.a]))[which(table(t01P[orP.a])>1)])){\nig<-which(round(t01P[orP.a],10)==round(ii,10))\nresoP2.a[ig]<-sum(resoP2.a[ig])/length(ig)\n}\nWP2.a<-1/sqrt(N)*cumsum(resoP2.a)\n\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2.a<-WsP2.t<-WsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3 +x4+x5+x6+x7, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n\nestP.ts<-x[,c(1,2)]%*%fixef(fits)[c(1,2)]\norP.ts<-order(estP.ts)\nresoP2.ts<-ressIS22[orP.ts]\n t01P<- estP.ts\nfor (iii in as.numeric(names(table(t01P[orP.ts]))[which(table(t01P[orP.ts])>1)])){\nig<-which(round(t01P[orP.ts],10)==round(iii,10))\nresoP2.ts[ig]<-sum(resoP2.ts[ig])/length(ig)\n}\nWP2.ts<-1/sqrt(N)*cumsum(resoP2.ts)\n\nestP.as<-x[,c(1,4)]%*%fixef(fits)[c(1,4)]\norP.as<-order(estP.as)\nresoP2.as<-ressIS22[orP.as]\n t01P<- estP.as\nfor (iii in as.numeric(names(table(t01P[orP.as]))[which(table(t01P[orP.as])>1)])){\nig<-which(round(t01P[orP.as],10)==round(iii,10))\nresoP2.as[ig]<-sum(resoP2.as[ig])/length(ig)\n}\nWP2.as<-1/sqrt(N)*cumsum(resoP2.as)\n\nWsP2.a[[ii]]<-WP2.as\nWsP2.t[[ii]]<-WP2.ts\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\n\n\n\nKSiP.t<-unlist(lapply(WsP2.t,function(x) max(abs(x)) ))\nCvMiP.t<-unlist(lapply(WsP2.t,function(x) sum(x**2) ))\nKSP.t<-max(abs(WP2.t))\nCvMP.t<-sum(WP2.t**2)\n\npKSF.t<-(sum(KSiP.t>=KSP.t)+1)/(M+1)\npCvMF.t<-(sum(CvMiP.t>=CvMP.t)+1)/(M+1)\n\n\n\n\nKSiP.a<-unlist(lapply(WsP2.a,function(x) max(abs(x)) ))\nCvMiP.a<-unlist(lapply(WsP2.a,function(x) sum(x**2) ))\nKSP.a<-max(abs(WP2.a))\nCvMP.a<-sum(WP2.a**2)\n\npKSF.a<-(sum(KSiP.a>=KSP.a)+1)/(M+1)\npCvMF.a<-(sum(CvMiP.a>=CvMP.a)+1)/(M+1)\n\n\n\n\n\nresij<-c(pKS,pCvM,pKSF,pCvMF,pKSF.t,pCvMF.t,pKSF.a,pCvMF.a)\n\n#par(mfrow=c(2,4))\n\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\nplot(1:nrow(x),WP2.t,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[5],4),\", CvM p=\",round(resij[6],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.t[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.t,type=\"s\")\n\n\nplot(1:nrow(x),WP2.a,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[7],4),\", CvM p=\",round(resij[8],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2.a[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2.a,type=\"s\")\n\n\n\n\n\n\n\n\n####model 2\n\n\nfit<-lme( sqrt(CD4CNT)~t+t:treatmnt  ,data=cd4, random=~1|newpid)\n\nfit<-lme( sqrt(CD4CNT)~t+t:treatmnt  +I(t^2)+I(t^2):treatmnt,data=cd4, random=~1|newpid)\n\nfit<-lme( sqrt(CD4CNT)~t+t:treatmnt+baseage +treatmnt:baseage,data=cd4, random=~1|newpid)\n\n#x0<-as.numeric(aids$prevOI)-1\nx1<-cd4$t\nx2<-cd4$treatmnt -1\nx3<-x1*x2\nx4<-cd4$baseage\nx5<-cd4$baseage**2\nx6<-cd4$t**2\nx7<-x6*x2\n\n\nx<-cbind(1,x1,x3,x4,x5,x6,x7)\n\ndf<-cbind(cd4,x)\n\n\ndf$y<-sqrt(cd4$CD4CNT)\ndf$id<-cd4$newpid\n\nfit<-lme( y~ x1+x3+x4+x5+x6+x7,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3+x4+x5+x6+x7, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n######################\n\nlibrary(JSM)\n\ndata(aids)\n\npar(mfrow=c(4,2))\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-TRUE #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\nM=25\n\naids<-aids[aids$prevOI==\"AIDS\",]\n\n#fit<-lme( CD4~obstime+obstime:drug,data=aids, random=~1|patient )\nfit<-lme( sqrt(CD4)~obstime+drug+obstime:drug ,data=aids, random=~1|patient )\n\nx<-model.matrix(sqrt(CD4)~factor(obstime)+drug+factor(obstime):drug ,data=aids)\n\ndf<-aids\n\ndf$y<-sqrt(aids$CD4)\ndf$id<-aids$patient\n\nfit<-lme( y~ x-1,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x-1, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\npar(mfrow=c(3,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n########Model 2\n\n\n\nfit<-lme( log(CD4+1)~obstime+obstime:drug+I(obstime^2)+I(obstime^2):drug,data=aids, random=~1|patient )\n\n\nx1<-aids$obstime\nx2<-as.numeric(aids$drug)-1\nx3<-x1*x2\n\nx4<-aids$obstime**2\nx5<-aids$obstime**2 * x2\n\n\n\nx<-cbind(1, x1,x3,x4,x5)\n\ndf<-aids\n\ndf$y<-log(aids$CD4+1)\ndf$id<-aids$patient\n\nfit<-lme( y~ x1+x3+x4+x5,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n########Model 3\n\n\n\nfit<-lme( sqrt(CD4)~obstime+obstime:drug+I(obstime^2)+I(obstime^2):drug,data=aids, random=~1|patient )\n\n\nx1<-aids$obstime\nx2<-as.numeric(aids$drug)-1\nx3<-x1*x2\n\nx4<-aids$obstime**2\nx5<-aids$obstime**2 * x2\n\n\n\nx<-cbind(1, x1,x3,x4,x5)\n\ndf<-aids\n\ndf$y<-sqrt(aids$CD4)\ndf$id<-aids$patient\n\nfit<-lme( y~ x1+x3+x4+x5,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n########Model 4\n\n\n\nfit<-lme( sqrt(CD4)~obstime+obstime:drug+I(obstime^2)+I(obstime^2):drug,data=aids, random=~obstime|patient )\n\n\nx1<-aids$obstime\nx2<-as.numeric(aids$drug)-1\nx3<-x1*x2\n\nx4<-aids$obstime**2\nx5<-aids$obstime**2 * x2\n\n\n\nx<-cbind(1, x1,x3,x4,x5)\n\ndf<-aids\n\ndf$y<- sqrt(aids$CD4)\ndf$id<-aids$patient\n\nfit<-lme( y~ x1+x3+x4+x5,data=df, random=~x1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x3+x4+x5, data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n\n#####all data, strange results\n\nlibrary(JSM)\n\ndata(aids)\n\n\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-TRUE #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\nM=100\n\nfit<-lme( CD4~obstime+obstime:drug,data=aids, random=~1|patient )\nfit<-lme( CD4~obstime+obstime:drug+prevOI,data=aids, random=~1|patient )\n\nx0<-as.numeric(aids$prevOI)-1\nx1<-aids$obstime\nx2<-as.numeric(aids$drug)-1\nx3<-x1*x2\n\nx<-cbind(1,x0,x1,x3)\n\ndf<-aids\n\ndf$y<-aids$CD4\ndf$id<-aids$patient\n\nfit<-lme( y~x0+x1+x3,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x0+x1+x3, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n########Model 2\n\n\n\nfit<-lme( CD4~prevOI+obstime+obstime:drug+I(obstime^2)+I(obstime^2):drug,data=aids, random=~1|patient )\n\nx0<-as.numeric(aids$prevOI)-1\nx1<-aids$obstime\nx2<-as.numeric(aids$drug)-1\nx3<-x1*x2\n\nx4<-aids$obstime**2\nx5<-aids$obstime**2 * x2\n\n\n\nx<-cbind(1,x0,x1,x3,x4,x5)\n\ndf<-aids\n\ndf$y<-aids$CD4\ndf$id<-aids$patient\n\nfit<-lme( y~x0+x1+x3+x4+x5,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x0+x1+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n########Model 3\n\n\n\nfit<-lme( sqrt(CD4)~prevOI+obstime+obstime:drug+I(obstime^2)+I(obstime^2):drug,data=aids, random=~1|patient )\n\nx0<-as.numeric(aids$prevOI)-1\nx1<-aids$obstime\nx2<-as.numeric(aids$drug)-1\nx3<-x1*x2\n\nx4<-aids$obstime**2\nx5<-aids$obstime**2 * x2\n\n\n\nx<-cbind(1,x0,x1,x3,x4,x5)\n\ndf<-aids\n\ndf$y<-sqrt(aids$CD4)\ndf$id<-aids$patient\n\nfit<-lme( y~x0+x1+x3+x4+x5,data=df, random=~1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x0+x1+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n########Model 4\n\n\n\nfit<-lme( sqrt(CD4)~prevOI+obstime+obstime:drug+I(obstime^2)+I(obstime^2):drug,data=aids, random=~obstime|patient )\n\nx0<-as.numeric(aids$prevOI)-1\nx1<-aids$obstime\nx2<-as.numeric(aids$drug)-1\nx3<-x1*x2\n\nx4<-aids$obstime**2\nx5<-aids$obstime**2 * x2\n\n\n\nx<-cbind(1,x0,x1,x3,x4,x5)\n\ndf<-aids\n\ndf$y<- aids$CD4\ndf$id<-aids$patient\n\nfit<-lme( y~x0+x1+x3+x4+x5,data=df, random=~x1|id )\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x0+x1+x3+x4+x5, data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1, x1[df$id==gg])\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\n\n\nt01<- estsI\n\nfor (iii in as.numeric(names(table(t01[orsI]))[which(table(t01[orsI])>1)])){\nig<-which(round(t01[orsI],10)==round(iii,10))\nresosI2[ig]<-sum(resosI2[ig])/length(ig)\n}\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\nresosP2<-ressIS22[orsP]\n\n\n t01P<- estsP\nfor (iii in as.numeric(names(table(t01P[orsP]))[which(table(t01P[orsP])>1)])){\nig<-which(round(t01P[orsP],10)==round(iii,10))\nresosP2[ig]<-sum(resosP2[ig])/length(ig)\n}\n\n\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ),xlab=\"\")\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ),xlab=\"\")\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n################\n\n#####\n\n\n######\n\nlibrary(JM)\n\n\ndata(pbc2)\n\nhist(pbc2$serBilir)\n\n\n\n\nset.seed(1)\n\npar(mfrow=c(3,2))\n\n\n\n\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-TRUE #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\n\nM=100\n\n\n\n\n\n#include interaction, but no main effect of T\n\n\n#x<-cbind(1,as.numeric(pbc2$drug)-1,pbc2$year, (as.numeric(pbc2$drug)-1)*pbc2$year)\nx<-cbind(1,pbc2$year, (as.numeric(pbc2$drug)-1)*pbc2$year)\n#x<-cbind(1,pbc2$year, (as.numeric(pbc2$drug)-1)*pbc2$year)\n\ndf<-pbc2\ndf$y<-log(pbc2$serBilir,base=2)\ndf$x0<- as.numeric(pbc2$drug)-1\n\ndf$x1<-pbc2$year\ndf$x2<-(as.numeric(pbc2$drug)-1)*pbc2$year\ndf$id<-as.numeric(pbc2$id)\n\n\n\nx<-cbind(1,as.numeric(pbc2$drug)-1,pbc2$year, pbc2$year**2, (as.numeric(pbc2$drug)-1)*pbc2$year,  ((as.numeric(pbc2$drug)-1)*pbc2$year)**2,pbc2$age)\ndf<-pbc2\ndf$y<-log(pbc2$serBilir,base=2)\n\ndf$x0<-as.numeric(pbc2$drug)-1\ndf$x1<-pbc2$year\ndf$x2<-pbc2$year**2\ndf$x3<-(as.numeric(pbc2$drug)-1)*pbc2$year\ndf$x4<-((as.numeric(pbc2$drug)-1)*pbc2$year)**2\ndf$id<-as.numeric(pbc2$id)\ndf$x5<-pbc2$age\n\n\n\nx<-cbind(1,pbc2$year, pbc2$year**2)\ndf<-pbc2\ndf$y<-log(pbc2$serBilir,base=2)\n\ndf$x0<-as.numeric(pbc2$drug)-1\ndf$x1<-pbc2$year\ndf$x2<-pbc2$year**2\ndf$x3<-(as.numeric(pbc2$drug)-1)*pbc2$year\ndf$x4<-((as.numeric(pbc2$drug)-1)*pbc2$year)**2\ndf$id<-as.numeric(pbc2$id)\ndf$x5<-pbc2$age\n\n\n#fit.model\n\n\n#fit<-lme(fixed=y~x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#fit<-lme(fixed=y~x0+x1+x2+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\nfit<-lme(fixed=y~x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nif (ind.proc==TRUE) res.i.c2<-resI else res.i.c2<-resP\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\nt01<- estI\n\nfor (ii in as.numeric(names(table(t01[orI]))[which(table(t01[orI])>1)])){\nig<-which(round(t01[orI],10)==round(ii,10))\nresoI2[ig]<-sum(resoI2[ig])/length(ig)\n}\n\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n t01P<- estP\nfor (ii in as.numeric(names(table(t01P[orP]))[which(table(t01P[orP])>1)])){\nig<-which(round(t01P[orP],6)==round(ii,6))\nresoP2[ig]<-sum(resoP2[ig])/length(ig)\n}\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\n#fits<-lme(fixed=ys~x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\nfits<-lme(fixed=ys~x1+x2+x3+x4, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nif (ind.proc==TRUE)  res.i.cs2<-ressI else  res.i.cs2<-ressP\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n\n##########################################################################\n\n######olds stuf, the code is not 100%\n\n#####include qudratic term of time\n\n#include interaction, but no main effect of T\n\n\n#x<-cbind(1,as.numeric(pbc2$drug)-1,pbc2$year, pbc2$year**2, (as.numeric(pbc2$drug)-1)*pbc2$year,  ((as.numeric(pbc2$drug)-1)*pbc2$year)**2)\nx<-cbind(1,pbc2$year, pbc2$year**2, (as.numeric(pbc2$drug)-1)*pbc2$year,  ((as.numeric(pbc2$drug)-1)*pbc2$year)**2)\ndf<-pbc2\ndf$y<-log(pbc2$serBilir,base=2)\n\ndf$x0<-as.numeric(pbc2$drug)-1\ndf$x1<-pbc2$year\ndf$x2<-pbc2$year**2\ndf$x3<-(as.numeric(pbc2$drug)-1)*pbc2$year\ndf$x4<-((as.numeric(pbc2$drug)-1)*pbc2$year)**2\ndf$id<-as.numeric(pbc2$id)\ndf$x5<-pbc2$age\n\n#fit.model\n\n\nfit<-lme(fixed=y~ x1+x2+x3+x4 , data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n#start gof analysis\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~ x1+x2+x3+x4, data=df, random=~x1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n#Z<-matrix(1,ncol=1,nrow=n)\nZ<-cbind(1,df$x1[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n####try to add a spline\n\n\n\n#include interaction, but no main effect of T\n\nlibrary(Hmisc)\n\nxs<-rcspline.eval(pbc2$year,nk=5,inclx=T)\n\nx<-cbind(1, xs, xs*cbind( as.numeric(pbc2$drug)-1,as.numeric(pbc2$drug)-1,as.numeric(pbc2$drug)-1,as.numeric(pbc2$drug)-1)    )\n\n y<-log(pbc2$serBilir,base=2)\n\nid<-  pbc2$id\n\n#fit.model\n\n\nfit<-lme(fixed=y~x-1,  random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\n#start gof analysis\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\n#df$ys<-ys\nfits<-lme(fixed=ys~x-1,  random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n###illustration, CD4 data from package JSM, maybe it will be useful\n\n##only a subset with AIDS\n\n\n\nset.seed(1)\n\npar(mfrow=c(3,2))\n\n\nlibrary(JSM)\ndata(aids)\n\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-FALSE #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\n\nM=250\n\n\n\naids<-aids[aids$prevDiag==\"AIDS\",]\n\n\n#include interaction, but no main effect of T\n\n\nx<-cbind(1,aids$obstime, (as.numeric(aids$drug)-1)*aids$obstime)\n\ndf<-aids\ndf$y<-aids$CD4\ndf$x0<-as.numeric(aids$prevDiag)-1\n\ndf$x1<-aids$obstime\ndf$x2<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n####include also quadratic effect of time\n\n\nx<-cbind(1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2)\n\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x2+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x2+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n#######add random intercept for time\n\n\n\nx<-cbind(1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2)\n\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x2+x3+x4+x5, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x2+x3+x4+x5, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\nZ<-cbind(1,df$x2[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n#######add random intercept for time and its square cannot fit this, error in lme!\n\n\n\nx<-cbind(1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2)\n\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x2+x3+x4+x5, data=df, random=~x2+x3|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x2+x3+x4+x5, data=df, random=~x2+x3|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg],df$x3[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n#######stop here, not helpful\n\n\nx<-cbind(1,as.numeric(aids$drug)-1,aids$obstime)\n\ndf<-aids\ndf$y<-aids$CD4\ndf$x0<-as.numeric(aids$prevDiag)-1\ndf$x1<-as.numeric(aids$drug)-1\ndf$x2<-aids$obstime\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-length(unique(df$id))\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2/sqrt(n))\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22/sqrt(n))\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in unique(df$id)){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2/sqrt(n))\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22/sqrt(n))\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n###########################\n\n\n\n\n\n\n\n#####add more covariates\n\n\nx<-cbind(1,as.numeric(aids$prevDiag)-1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2,\nas.numeric(aids$gender)-1,as.numeric(aids$AZT)-1\n)\n\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\ndf$x6<-as.numeric(aids$gender)-1\ndf$x7<-as.numeric(aids$AZT)-1\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x1+x2+x3+x4+x5+x6+x7, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-max(df$id)\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2)\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22)\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N*n)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N*n)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x1+x2+x3+x4+x5+x6+x7, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2)\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22)\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N*n)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N*n)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\npar(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n########entire dataset\n\n\nset.seed(1)\n\npar(mfrow=c(5,2))\n\n\nlibrary(JSM)\ndata(aids)\n\n\nlibrary(MASS)\n\n\"%^%\" <- function(x, n)   with(eigen(x), vectors %*% (values^n * t(vectors)))\n\nstd.type=2\n\nsign.flip<-TRUE #works only for TRUE!\n#permute.within<-TRUE #theory is made for TRUE, I made sims for false. makes sense only if sign.flip<-FALSE\nflip.cluster<-FALSE # the same number is applied to all subjects within the cluster (theory says this is the only valid way...)\n\nindividual<-FALSE  #by theory it should only be FALSE!\n\norder.by.original<-FALSE #use original fitted value instead of permuted. should in theory maybe only make sense for sign-flipping.\n\nind.proc<-FALSE #should not matter what you use (maybe not, could be that it only makes sense for FALSE!)\n\n\nM=100\n\n\n###the most basic model\n\n\nx<-cbind(1,as.numeric(aids$prevDiag)-1,as.numeric(aids$drug)-1,aids$obstime)\n\ndf<-aids\ndf$y<-aids$CD4\ndf$x0<-as.numeric(aids$prevDiag)-1\ndf$x1<-as.numeric(aids$drug)-1\ndf$x2<-aids$obstime\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x0+x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-max(df$id)\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2)\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22)\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N*n)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N*n)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x0+x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2)\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22)\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N*n)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N*n)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n###########################\n\n\n#include interaction, but no main effect of T\n\n\nx<-cbind(1,as.numeric(aids$prevDiag)-1,aids$obstime, (as.numeric(aids$drug)-1)*aids$obstime)\n\ndf<-aids\ndf$y<-aids$CD4\ndf$x0<-as.numeric(aids$prevDiag)-1\n\ndf$x1<-aids$obstime\ndf$x2<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x0+x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-max(df$id)\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2)\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22)\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N*n)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N*n)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x0+x1+x2, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2)\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22)\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N*n)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N*n)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n####include also quadratic effect of time\n\n\nx<-cbind(1,as.numeric(aids$prevDiag)-1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2)\n\ndf<-aids\ndf$y<-aids$CD4\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x1+x2+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-max(df$id)\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2)\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22)\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N*n)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N*n)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x1+x2+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2)\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22)\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N*n)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N*n)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n############################\n\n###use sqrt for y\n\n\nx<-cbind(1,as.numeric(aids$prevDiag)-1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2)\n\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x1+x2+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-max(df$id)\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2)\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22)\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N*n)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N*n)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nif (nrow(vc)>2) Z<-x[df$id==gg,which(fit.random.effects==1)] else Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x1+x2+x3+x4+x5, data=df, random=~1|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\n  Z<-matrix(1,ncol=1,nrow=n)\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n  Z<-matrix(1,ncol=1,nrow=n)\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2)\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22)\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N*n)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N*n)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n#######add random intercept for time\n\n\n\nx<-cbind(1,as.numeric(aids$prevDiag)-1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2)\n\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x1+x2+x3+x4+x5, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-max(df$id)\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2)\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22)\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N*n)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N*n)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x1+x2+x3+x4+x5, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2)\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22)\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N*n)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N*n)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\n#par(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n\n\n\n\n\n\n#######stop here, not helpful\n\n#####add more covariates\n\n\nx<-cbind(1,as.numeric(aids$prevDiag)-1,aids$obstime,aids$obstime**2, (as.numeric(aids$drug)-1)*aids$obstime, ((as.numeric(aids$drug)-1)*aids$obstime)**2,\nas.numeric(aids$gender)-1,as.numeric(aids$AZT)-1\n)\n\ndf<-aids\ndf$y<-sqrt(aids$CD4)\ndf$x1<-as.numeric(aids$prevDiag)-1\ndf$x2<-aids$obstime\ndf$x3<-aids$obstime**2\ndf$x4<-(as.numeric(aids$drug)-1)*aids$obstime\ndf$x5<- ((as.numeric(aids$drug)-1)*aids$obstime)**2\ndf$x6<-as.numeric(aids$gender)-1\ndf$x7<-as.numeric(aids$AZT)-1\n\n\ndf$id<-as.numeric(aids$ID)\n#fit.model\n\n\nfit<-lme(fixed=y~x1+x2+x3+x4+x5+x6+x7, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n#start gof analysis\n\n\n\nif (std.type==1) resIS2<-residuals(fit, level = 1, type = c(  \"p\") )\nresI<-residuals(fit, level = 1  )\n\n\nresP<-residuals(fit, level = 0  )\n\nestI<-fitted(fit,level=1)\n estP<-fitted(fit,level=0)\n\norI<-order(estI)\norP<-order(estP)\n\n\n\nvc<-VarCorr(fit)\nsigma.est<-as.numeric(vc[nrow(vc),1])\n\nD<-getVarCov(fit)\n\nN<-max(df$id)\n\nH<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\nH<-H+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.i%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.i<-solve(H)\n\n\nbeta.f<-fixef(fit)\nres.i.c<-resI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V-  matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t( matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\nif (ind.proc==TRUE) res.i.c[df$id==gg]<-resI[df$id==gg]- A%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\nif (ind.proc==FALSE) res.i.c[df$id==gg]<-resP[df$id==gg]- (A+B)%*%ginv(B)%*% matrix(estI[df$id==gg]-  matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.f ,ncol=1)\n\n\n\n}\n\nres.i.c2<-resI\n\n\nif (std.type!=1){\nresIS2<-NA\nresIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\nV<-Z%*%D%*%t(Z)+sigma.est*I\nif (std.type==2){\nV.i<-V%^%(-0.5)\n}\nif (std.type==3){\nG.i<- sigma.est*V%^%(-1)\nvar.est<-G.i%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.i\nV.i<-var.est%^%(-0.5)\n}\nresIm2<-matrix(res.i.c[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm2<-V.i%*%resIm2\nresIS2<-c(resIS2,resISm2)\n\nresIm22<-matrix(res.i.c2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISm22<-V.i%*%resIm22\nresIS22<-c(resIS22,resISm22)\n\n}\n\nresIS2<-resIS2[-1]\nresIS22<-resIS22[-1]\n}\n\n\nresoI2<-resIS2[orI]\n\nWI2<-1/sqrt(N*n)*cumsum(resoI2)\n\nresoP2<-resIS22[orP]\n\nWP2<-1/sqrt(N*n)*cumsum(resoP2)\n\n\nif (individual==FALSE) resP<-resP else resP<-resI\nif (individual==FALSE) estP<-estP else estP<-estI\n\n\nrespermute<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(-0.5) else V.i<-V%^%(0.5)\n\nresPMp<-matrix(resP[df$id==gg],ncol=1,nrow=n,byrow=F)\nresPMp2<-V.i%*%resPMp\nrespermute<-c(respermute,resPMp2)\n}\n\nrespermute<-respermute[-1]\n\n\n\nWsP2<-WsI2<-estYs01<-list()\nfor (ii in 1:M){\n\nsmp<-sample(c(-1,1),size=nrow(x),replace=TRUE)\n\nys<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\n\nif (individual==FALSE) V.i<-V%^%(0.5) else V.i<-V%^%(-0.5)\n\nif (sign.flip==TRUE){\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute*smp)[df$id==gg]))\n\n} else {\n\nys<-c(ys,estP[df$id==gg]+  V.i%*%( (respermute[smp])[df$id==gg]))\n\n}\n\n}\nys<-ys[-1]\n\n\ndf$ys<-ys\nfits<-lme(fixed=ys~x1+x2+x3+x4+x5+x6+x7, data=df, random=~x2|id,control=lmeControl( returnObject = TRUE),method=\"REML\" )\n\n\n\nif (std.type==1) ressIS2<-residuals(fits,level=1,type=\"p\")\nressI<-residuals(fits,level=1)\nressP<-residuals(fits,level=0)\n\nif ( order.by.original==FALSE)  estsI<-fitted(fits,level=1) else estsI<-fitted(fit,level=1) #change if you want ordering based on yo (level=0) or yi (level=1)\nif ( order.by.original==FALSE)   estsP<-fitted(fits,level=0) else estsP<-fitted(fit,level=0)\norsI<-order(estsI)\norsP<-order(estsP)\n\n\n\n\nvcs<-VarCorr(fits)\nsigma.ests<-as.numeric(vcs[nrow(vcs),1])\n\nDs<-getVarCov(fits)\n\n\n\nHs<-matrix(0,ncol=ncol(x),nrow=ncol(x))\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\nHs<-Hs+t(matrix(x[df$id==gg,],ncol=ncol(x)))%*%V.is%*%matrix(x[df$id==gg,],ncol=ncol(x))\n}\n\nH.is<-solve(Hs)\n\n\nbeta.fs<-fixef(fits)\nres.i.cs2<-ressI\nres.i.cs<-ressI\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nVs<-Z%*%Ds%*%t(Z)+sigma.ests*I\nV.is<-Vs%^%(-1)\n\nif (order.by.original==FALSE) {\nAs<-sigma.ests*V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\nBs<- Z%*%Ds%*%t(Z) %*%V.is%*%( Vs- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.is%*%Z%*%Ds%*%t(Z)\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-ressI[df$id==gg]- As%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-ressP[df$id==gg]- (As+Bs)%*%ginv(Bs)%*% matrix(estsI[df$id==gg]-matrix(x[df$id==gg,],ncol=ncol(x))%*%beta.fs,ncol=1)\n\n} else {\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%D%*%t(Z)+sigma.est*I\nV.i<-V%^%(-1)\n\n\nA<-sigma.est*V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\nB<-Z%*%D%*%t(Z) %*%V.i%*%( V- matrix(x[df$id==gg,],ncol=ncol(x))%*%H.i%*%t(matrix(x[df$id==gg,],ncol=ncol(x))) )%*%V.i%*%Z%*%D%*%t(Z)\n\n\nif (ind.proc==TRUE) {\n\nJ.i<-sigma.est*V.i-A%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n} else {\n\nJ.i<-I-(A+B)%*%ginv(B)%*%Z%*%D%*%t(Z) %*%V.i\n\n}\n\nif (ind.proc==TRUE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\nif (ind.proc==FALSE) res.i.cs[df$id==gg]<-J.i%*%ressP[df$id==gg]\n\n}\n\n\n}\n\n\n\n\n\n\nif (std.type!=1){\n ressIS2<-NA\nressIS22<-NA\nfor (gg in 1:N){\nn<-sum( df$id==gg )\nI<-diag(rep(1,n))\n\nZ<-cbind(1,df$x2[df$id==gg])\n\nV<-Z%*%Ds%*%t(Z)+sigma.ests*I\n if (std.type==2){\nV.i<-V%^%(-0.5)\n}\n if (std.type==3){\nG.is<- sigma.ests*V%^%(-1)\nvar.ests<-G.is%*%( V-matrix(x[df$id==gg,],ncol=ncol(x))%*%H.is %*%t(matrix(x[df$id==gg,],ncol=ncol(x))))%*%G.is\nV.i<-var.ests%^%(-0.5)\n}\n\n\nresIms2<-matrix(res.i.cs[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms2<-V.i%*%resIms2\nressIS2<-c(ressIS2,resISms2)\n\n\nresIms22<-matrix(res.i.cs2[df$id==gg],ncol=1,nrow=n,byrow=F)\nresISms22<-V.i%*%resIms22\nressIS22<-c(ressIS22,resISms22)\n\n}\n\nressIS2<-ressIS2[-1]\nressIS22<-ressIS22[-1]\n }\n\nresosI2<-ressIS2[orsI]\n\n\nresosP2<-ressIS22[orsP]\n\n\n\nWsP2[[ii]]<-1/sqrt(N*n)*cumsum(resosP2)\n\nWsI2[[ii]]<-1/sqrt(N*n)*cumsum(resosI2)\n\n\n\n}\n\n\n###get the test stats, ps and plots\n\nKS<-max(abs(WI2))\nCvM<-sum(WI2**2)\n#lines(to1o,dif,col=\"red\",type=\"s\")\n\n\n\nKSi<-unlist(lapply(WsI2,function(x) max(abs(x)) ))\nCvMi<-unlist(lapply(WsI2,function(x) sum(x**2) ))\n\npKS<-(sum(KSi>=KS)+1)/(M+1)\npCvM<-(sum(CvMi>=CvM)+1)/(M+1)\n\n\nKSiP<-unlist(lapply(WsP2,function(x) max(abs(x)) ))\nCvMiP<-unlist(lapply(WsP2,function(x) sum(x**2) ))\nKSP<-max(abs(WP2))\nCvMP<-sum(WP2**2)\n\npKSF<-(sum(KSiP>=KSP)+1)/(M+1)\npCvMF<-(sum(CvMiP>=CvMP)+1)/(M+1)\n\nresij<-c(pKS,pCvM,pKSF,pCvMF)\n\npar(mfrow=c(1,2))\nplot(1:nrow(x),WI2,col=\"red\",type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[1],4),\", CvM p=\",round(resij[2],4),sep=\"\"  ))\nfor (ii  in 1:M){\nlines(1:nrow(x),WsI2[[ii]],col=\"lightgray\",type=\"s\")\n\n}\n\nlines(1:nrow(x),WI2,type=\"s\" )\n\n\nplot(1:nrow(x),WP2,type=\"s\",ylim=c(-1,1),main=paste(\"KS p=\", round(resij[3],4),\", CvM p=\",round(resij[4],4),sep=\"\"  ))\nfor (ii in 1:M){\nlines(1:nrow(x),WsP2[[ii]],type=\"s\",col=\"lightgray\")\n}\nlines(1:nrow(x),WP2,type=\"s\")\n\n\n\n",
    "created" : 1566375738930.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2049383215",
    "id" : "8622560D",
    "lastKnownWriteTime" : 1566809700,
    "last_content_update" : 1566809700623,
    "path" : "E:/dropbox/Dropbox (MF Uni LJ)/gofLinearMixedModel/RealHIVIllustration.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}